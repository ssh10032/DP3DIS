/home/songoh/miniconda3/envs/mask/lib/python3.10/site-packages/MinkowskiEngine/__init__.py:36: UserWarning: The environment variable `OMP_NUM_THREADS` not set. MinkowskiEngine will automatically set `OMP_NUM_THREADS=16`. If you want to set `OMP_NUM_THREADS` manually, please export it on the command line before running a python script. e.g. `export OMP_NUM_THREADS=12; python your_program.py`. It is recommended to set it below 24.
  warnings.warn(
/home/songoh/miniconda3/envs/mask/lib/python3.10/site-packages/pytorch_lightning/utilities/seed.py:55: UserWarning: No seed found, seed set to 2128025664
  rank_zero_warn(f"No seed found, seed set to {seed}")
Global seed set to 2128025664
/home/songoh/miniconda3/envs/mask/lib/python3.10/site-packages/pytorch_lightning/loggers/wandb.py:352: UserWarning: There is a wandb run already in progress and newly created instances of `WandbLogger` will reuse this run. If this is not desired, call `wandb.finish()` before instantiating `WandbLogger`.
  rank_zero_warn(
EXPERIMENT ALREADY EXIST
{'_target_': 'pytorch_lightning.loggers.WandbLogger', 'project': '${general.project_name}', 'name': '${general.experiment_name}', 'save_dir': '${general.save_dir}', 'entity': 'schult', 'resume': 'allow', 'id': '${general.experiment_name}'}
[32m2024-05-07 22:03:12.823[39m | [33m[1mWARNING [39m[22m | [36mutils.utils[39m:[36mload_checkpoint_with_missing_or_exsessive_keys[39m:[36m84[39m - [33m[1mKey not found, it will be initialized randomly: model.cross_attention.0.4.multihead_attn.in_proj_weight
[32m2024-05-07 22:03:12.823[39m | [33m[1mWARNING [39m[22m | [36mutils.utils[39m:[36mload_checkpoint_with_missing_or_exsessive_keys[39m:[36m84[39m - [33m[1mKey not found, it will be initialized randomly: model.cross_attention.0.4.multihead_attn.in_proj_bias
[32m2024-05-07 22:03:12.824[39m | [33m[1mWARNING [39m[22m | [36mutils.utils[39m:[36mload_checkpoint_with_missing_or_exsessive_keys[39m:[36m84[39m - [33m[1mKey not found, it will be initialized randomly: model.cross_attention.0.4.multihead_attn.out_proj.weight
[32m2024-05-07 22:03:12.824[39m | [33m[1mWARNING [39m[22m | [36mutils.utils[39m:[36mload_checkpoint_with_missing_or_exsessive_keys[39m:[36m84[39m - [33m[1mKey not found, it will be initialized randomly: model.cross_attention.0.4.multihead_attn.out_proj.bias
[32m2024-05-07 22:03:12.824[39m | [33m[1mWARNING [39m[22m | [36mutils.utils[39m:[36mload_checkpoint_with_missing_or_exsessive_keys[39m:[36m84[39m - [33m[1mKey not found, it will be initialized randomly: model.cross_attention.0.4.norm.weight
[32m2024-05-07 22:03:12.824[39m | [33m[1mWARNING [39m[22m | [36mutils.utils[39m:[36mload_checkpoint_with_missing_or_exsessive_keys[39m:[36m84[39m - [33m[1mKey not found, it will be initialized randomly: model.cross_attention.0.4.norm.bias
[32m2024-05-07 22:03:12.824[39m | [33m[1mWARNING [39m[22m | [36mutils.utils[39m:[36mload_checkpoint_with_missing_or_exsessive_keys[39m:[36m84[39m - [33m[1mKey not found, it will be initialized randomly: model.self_attention.0.4.self_attn.in_proj_weight
[32m2024-05-07 22:03:12.824[39m | [33m[1mWARNING [39m[22m | [36mutils.utils[39m:[36mload_checkpoint_with_missing_or_exsessive_keys[39m:[36m84[39m - [33m[1mKey not found, it will be initialized randomly: model.self_attention.0.4.self_attn.in_proj_bias
[32m2024-05-07 22:03:12.825[39m | [33m[1mWARNING [39m[22m | [36mutils.utils[39m:[36mload_checkpoint_with_missing_or_exsessive_keys[39m:[36m84[39m - [33m[1mKey not found, it will be initialized randomly: model.self_attention.0.4.self_attn.out_proj.weight
[32m2024-05-07 22:03:12.825[39m | [33m[1mWARNING [39m[22m | [36mutils.utils[39m:[36mload_checkpoint_with_missing_or_exsessive_keys[39m:[36m84[39m - [33m[1mKey not found, it will be initialized randomly: model.self_attention.0.4.self_attn.out_proj.bias
[32m2024-05-07 22:03:12.825[39m | [33m[1mWARNING [39m[22m | [36mutils.utils[39m:[36mload_checkpoint_with_missing_or_exsessive_keys[39m:[36m84[39m - [33m[1mKey not found, it will be initialized randomly: model.self_attention.0.4.norm.weight
[32m2024-05-07 22:03:12.825[39m | [33m[1mWARNING [39m[22m | [36mutils.utils[39m:[36mload_checkpoint_with_missing_or_exsessive_keys[39m:[36m84[39m - [33m[1mKey not found, it will be initialized randomly: model.self_attention.0.4.norm.bias
[32m2024-05-07 22:03:12.825[39m | [33m[1mWARNING [39m[22m | [36mutils.utils[39m:[36mload_checkpoint_with_missing_or_exsessive_keys[39m:[36m84[39m - [33m[1mKey not found, it will be initialized randomly: model.ffn_attention.0.4.linear1.weight
[32m2024-05-07 22:03:12.825[39m | [33m[1mWARNING [39m[22m | [36mutils.utils[39m:[36mload_checkpoint_with_missing_or_exsessive_keys[39m:[36m84[39m - [33m[1mKey not found, it will be initialized randomly: model.ffn_attention.0.4.linear1.bias
[32m2024-05-07 22:03:12.826[39m | [33m[1mWARNING [39m[22m | [36mutils.utils[39m:[36mload_checkpoint_with_missing_or_exsessive_keys[39m:[36m84[39m - [33m[1mKey not found, it will be initialized randomly: model.ffn_attention.0.4.linear2.weight
[32m2024-05-07 22:03:12.826[39m | [33m[1mWARNING [39m[22m | [36mutils.utils[39m:[36mload_checkpoint_with_missing_or_exsessive_keys[39m:[36m84[39m - [33m[1mKey not found, it will be initialized randomly: model.ffn_attention.0.4.linear2.bias
[32m2024-05-07 22:03:12.826[39m | [33m[1mWARNING [39m[22m | [36mutils.utils[39m:[36mload_checkpoint_with_missing_or_exsessive_keys[39m:[36m84[39m - [33m[1mKey not found, it will be initialized randomly: model.ffn_attention.0.4.norm.weight
[32m2024-05-07 22:03:12.826[39m | [33m[1mWARNING [39m[22m | [36mutils.utils[39m:[36mload_checkpoint_with_missing_or_exsessive_keys[39m:[36m84[39m - [33m[1mKey not found, it will be initialized randomly: model.ffn_attention.0.4.norm.bias
[32m2024-05-07 22:03:12.826[39m | [33m[1mWARNING [39m[22m | [36mutils.utils[39m:[36mload_checkpoint_with_missing_or_exsessive_keys[39m:[36m84[39m - [33m[1mKey not found, it will be initialized randomly: model.lin_squeeze.0.4.weight
[32m2024-05-07 22:03:12.827[39m | [33m[1mWARNING [39m[22m | [36mutils.utils[39m:[36mload_checkpoint_with_missing_or_exsessive_keys[39m:[36m84[39m - [33m[1mKey not found, it will be initialized randomly: model.lin_squeeze.0.4.bias
[32m2024-05-07 22:03:13.531[39m | [33m[1mWARNING [39m[22m | [36mutils.utils[39m:[36mload_checkpoint_with_missing_or_exsessive_keys[39m:[36m96[39m - [33m[1mincorrect shape model.label_enc.weight:torch.Size([19, 128]) vs torch.Size([254, 128])
[32m2024-05-07 22:03:13.532[39m | [33m[1mWARNING [39m[22m | [36mutils.utils[39m:[36mload_checkpoint_with_missing_or_exsessive_keys[39m:[36m91[39m - [33m[1mmodel._bbox_embed.layers.0.weight not in loaded checkpoint
[32m2024-05-07 22:03:13.532[39m | [33m[1mWARNING [39m[22m | [36mutils.utils[39m:[36mload_checkpoint_with_missing_or_exsessive_keys[39m:[36m91[39m - [33m[1mmodel._bbox_embed.layers.0.bias not in loaded checkpoint
[32m2024-05-07 22:03:13.532[39m | [33m[1mWARNING [39m[22m | [36mutils.utils[39m:[36mload_checkpoint_with_missing_or_exsessive_keys[39m:[36m91[39m - [33m[1mmodel._bbox_embed.layers.1.weight not in loaded checkpoint
[32m2024-05-07 22:03:13.532[39m | [33m[1mWARNING [39m[22m | [36mutils.utils[39m:[36mload_checkpoint_with_missing_or_exsessive_keys[39m:[36m91[39m - [33m[1mmodel._bbox_embed.layers.1.bias not in loaded checkpoint
[32m2024-05-07 22:03:13.532[39m | [33m[1mWARNING [39m[22m | [36mutils.utils[39m:[36mload_checkpoint_with_missing_or_exsessive_keys[39m:[36m91[39m - [33m[1mmodel._bbox_embed.layers.2.weight not in loaded checkpoint
[32m2024-05-07 22:03:13.532[39m | [33m[1mWARNING [39m[22m | [36mutils.utils[39m:[36mload_checkpoint_with_missing_or_exsessive_keys[39m:[36m91[39m - [33m[1mmodel._bbox_embed.layers.2.bias not in loaded checkpoint
[32m2024-05-07 22:03:13.532[39m | [33m[1mWARNING [39m[22m | [36mutils.utils[39m:[36mload_checkpoint_with_missing_or_exsessive_keys[39m:[36m91[39m - [33m[1mmodel.bbox_embed.0.layers.0.weight not in loaded checkpoint
[32m2024-05-07 22:03:13.532[39m | [33m[1mWARNING [39m[22m | [36mutils.utils[39m:[36mload_checkpoint_with_missing_or_exsessive_keys[39m:[36m91[39m - [33m[1mmodel.bbox_embed.0.layers.0.bias not in loaded checkpoint
[32m2024-05-07 22:03:13.533[39m | [33m[1mWARNING [39m[22m | [36mutils.utils[39m:[36mload_checkpoint_with_missing_or_exsessive_keys[39m:[36m91[39m - [33m[1mmodel.bbox_embed.0.layers.1.weight not in loaded checkpoint
[32m2024-05-07 22:03:13.533[39m | [33m[1mWARNING [39m[22m | [36mutils.utils[39m:[36mload_checkpoint_with_missing_or_exsessive_keys[39m:[36m91[39m - [33m[1mmodel.bbox_embed.0.layers.1.bias not in loaded checkpoint
[32m2024-05-07 22:03:13.533[39m | [33m[1mWARNING [39m[22m | [36mutils.utils[39m:[36mload_checkpoint_with_missing_or_exsessive_keys[39m:[36m91[39m - [33m[1mmodel.bbox_embed.0.layers.2.weight not in loaded checkpoint
[32m2024-05-07 22:03:13.533[39m | [33m[1mWARNING [39m[22m | [36mutils.utils[39m:[36mload_checkpoint_with_missing_or_exsessive_keys[39m:[36m91[39m - [33m[1mmodel.bbox_embed.0.layers.2.bias not in loaded checkpoint
[32m2024-05-07 22:03:13.533[39m | [33m[1mWARNING [39m[22m | [36mutils.utils[39m:[36mload_checkpoint_with_missing_or_exsessive_keys[39m:[36m91[39m - [33m[1mmodel.bbox_embed.1.layers.0.weight not in loaded checkpoint
[32m2024-05-07 22:03:13.533[39m | [33m[1mWARNING [39m[22m | [36mutils.utils[39m:[36mload_checkpoint_with_missing_or_exsessive_keys[39m:[36m91[39m - [33m[1mmodel.bbox_embed.1.layers.0.bias not in loaded checkpoint
[32m2024-05-07 22:03:13.533[39m | [33m[1mWARNING [39m[22m | [36mutils.utils[39m:[36mload_checkpoint_with_missing_or_exsessive_keys[39m:[36m91[39m - [33m[1mmodel.bbox_embed.1.layers.1.weight not in loaded checkpoint
[32m2024-05-07 22:03:13.533[39m | [33m[1mWARNING [39m[22m | [36mutils.utils[39m:[36mload_checkpoint_with_missing_or_exsessive_keys[39m:[36m91[39m - [33m[1mmodel.bbox_embed.1.layers.1.bias not in loaded checkpoint
[32m2024-05-07 22:03:13.533[39m | [33m[1mWARNING [39m[22m | [36mutils.utils[39m:[36mload_checkpoint_with_missing_or_exsessive_keys[39m:[36m91[39m - [33m[1mmodel.bbox_embed.1.layers.2.weight not in loaded checkpoint
[32m2024-05-07 22:03:13.533[39m | [33m[1mWARNING [39m[22m | [36mutils.utils[39m:[36mload_checkpoint_with_missing_or_exsessive_keys[39m:[36m91[39m - [33m[1mmodel.bbox_embed.1.layers.2.bias not in loaded checkpoint
[32m2024-05-07 22:03:13.533[39m | [33m[1mWARNING [39m[22m | [36mutils.utils[39m:[36mload_checkpoint_with_missing_or_exsessive_keys[39m:[36m91[39m - [33m[1mmodel.bbox_embed.2.layers.0.weight not in loaded checkpoint
[32m2024-05-07 22:03:13.533[39m | [33m[1mWARNING [39m[22m | [36mutils.utils[39m:[36mload_checkpoint_with_missing_or_exsessive_keys[39m:[36m91[39m - [33m[1mmodel.bbox_embed.2.layers.0.bias not in loaded checkpoint
[32m2024-05-07 22:03:13.534[39m | [33m[1mWARNING [39m[22m | [36mutils.utils[39m:[36mload_checkpoint_with_missing_or_exsessive_keys[39m:[36m91[39m - [33m[1mmodel.bbox_embed.2.layers.1.weight not in loaded checkpoint
[32m2024-05-07 22:03:13.534[39m | [33m[1mWARNING [39m[22m | [36mutils.utils[39m:[36mload_checkpoint_with_missing_or_exsessive_keys[39m:[36m91[39m - [33m[1mmodel.bbox_embed.2.layers.1.bias not in loaded checkpoint
[32m2024-05-07 22:03:13.534[39m | [33m[1mWARNING [39m[22m | [36mutils.utils[39m:[36mload_checkpoint_with_missing_or_exsessive_keys[39m:[36m91[39m - [33m[1mmodel.bbox_embed.2.layers.2.weight not in loaded checkpoint
[32m2024-05-07 22:03:13.534[39m | [33m[1mWARNING [39m[22m | [36mutils.utils[39m:[36mload_checkpoint_with_missing_or_exsessive_keys[39m:[36m91[39m - [33m[1mmodel.bbox_embed.2.layers.2.bias not in loaded checkpoint
[32m2024-05-07 22:03:13.534[39m | [33m[1mWARNING [39m[22m | [36mutils.utils[39m:[36mload_checkpoint_with_missing_or_exsessive_keys[39m:[36m96[39m - [33m[1mincorrect shape model.query_projection.layers.0.weight:torch.Size([128, 768, 1]) vs torch.Size([128, 128, 1])
[32m2024-05-07 22:03:13.534[39m | [33m[1mWARNING [39m[22m | [36mutils.utils[39m:[36mload_checkpoint_with_missing_or_exsessive_keys[39m:[36m96[39m - [33m[1mincorrect shape model.pos_refinement.layers.2.weight:torch.Size([6, 128]) vs torch.Size([3, 128])
[32m2024-05-07 22:03:13.534[39m | [33m[1mWARNING [39m[22m | [36mutils.utils[39m:[36mload_checkpoint_with_missing_or_exsessive_keys[39m:[36m96[39m - [33m[1mincorrect shape model.pos_refinement.layers.2.bias:torch.Size([6]) vs torch.Size([3])
[32m2024-05-07 22:03:13.539[39m | [33m[1mWARNING [39m[22m | [36mutils.utils[39m:[36mload_checkpoint_with_missing_or_exsessive_keys[39m:[36m108[39m - [33m[1mexcessive key: model.cross_attention.0.4.multihead_attn.in_proj_weight
[32m2024-05-07 22:03:13.539[39m | [33m[1mWARNING [39m[22m | [36mutils.utils[39m:[36mload_checkpoint_with_missing_or_exsessive_keys[39m:[36m108[39m - [33m[1mexcessive key: model.cross_attention.0.4.multihead_attn.in_proj_bias
[32m2024-05-07 22:03:13.539[39m | [33m[1mWARNING [39m[22m | [36mutils.utils[39m:[36mload_checkpoint_with_missing_or_exsessive_keys[39m:[36m108[39m - [33m[1mexcessive key: model.cross_attention.0.4.multihead_attn.out_proj.weight
[32m2024-05-07 22:03:13.539[39m | [33m[1mWARNING [39m[22m | [36mutils.utils[39m:[36mload_checkpoint_with_missing_or_exsessive_keys[39m:[36m108[39m - [33m[1mexcessive key: model.cross_attention.0.4.multihead_attn.out_proj.bias
[32m2024-05-07 22:03:13.539[39m | [33m[1mWARNING [39m[22m | [36mutils.utils[39m:[36mload_checkpoint_with_missing_or_exsessive_keys[39m:[36m108[39m - [33m[1mexcessive key: model.cross_attention.0.4.norm.weight
[32m2024-05-07 22:03:13.540[39m | [33m[1mWARNING [39m[22m | [36mutils.utils[39m:[36mload_checkpoint_with_missing_or_exsessive_keys[39m:[36m108[39m - [33m[1mexcessive key: model.cross_attention.0.4.norm.bias
[32m2024-05-07 22:03:13.540[39m | [33m[1mWARNING [39m[22m | [36mutils.utils[39m:[36mload_checkpoint_with_missing_or_exsessive_keys[39m:[36m108[39m - [33m[1mexcessive key: model.self_attention.0.4.self_attn.in_proj_weight
[32m2024-05-07 22:03:13.540[39m | [33m[1mWARNING [39m[22m | [36mutils.utils[39m:[36mload_checkpoint_with_missing_or_exsessive_keys[39m:[36m108[39m - [33m[1mexcessive key: model.self_attention.0.4.self_attn.in_proj_bias
[32m2024-05-07 22:03:13.540[39m | [33m[1mWARNING [39m[22m | [36mutils.utils[39m:[36mload_checkpoint_with_missing_or_exsessive_keys[39m:[36m108[39m - [33m[1mexcessive key: model.self_attention.0.4.self_attn.out_proj.weight
[32m2024-05-07 22:03:13.540[39m | [33m[1mWARNING [39m[22m | [36mutils.utils[39m:[36mload_checkpoint_with_missing_or_exsessive_keys[39m:[36m108[39m - [33m[1mexcessive key: model.self_attention.0.4.self_attn.out_proj.bias
[32m2024-05-07 22:03:13.540[39m | [33m[1mWARNING [39m[22m | [36mutils.utils[39m:[36mload_checkpoint_with_missing_or_exsessive_keys[39m:[36m108[39m - [33m[1mexcessive key: model.self_attention.0.4.norm.weight
[32m2024-05-07 22:03:13.540[39m | [33m[1mWARNING [39m[22m | [36mutils.utils[39m:[36mload_checkpoint_with_missing_or_exsessive_keys[39m:[36m108[39m - [33m[1mexcessive key: model.self_attention.0.4.norm.bias
[32m2024-05-07 22:03:13.540[39m | [33m[1mWARNING [39m[22m | [36mutils.utils[39m:[36mload_checkpoint_with_missing_or_exsessive_keys[39m:[36m108[39m - [33m[1mexcessive key: model.ffn_attention.0.4.linear1.weight
[32m2024-05-07 22:03:13.540[39m | [33m[1mWARNING [39m[22m | [36mutils.utils[39m:[36mload_checkpoint_with_missing_or_exsessive_keys[39m:[36m108[39m - [33m[1mexcessive key: model.ffn_attention.0.4.linear1.bias
[32m2024-05-07 22:03:13.541[39m | [33m[1mWARNING [39m[22m | [36mutils.utils[39m:[36mload_checkpoint_with_missing_or_exsessive_keys[39m:[36m108[39m - [33m[1mexcessive key: model.ffn_attention.0.4.linear2.weight
[32m2024-05-07 22:03:13.541[39m | [33m[1mWARNING [39m[22m | [36mutils.utils[39m:[36mload_checkpoint_with_missing_or_exsessive_keys[39m:[36m108[39m - [33m[1mexcessive key: model.ffn_attention.0.4.linear2.bias
[32m2024-05-07 22:03:13.541[39m | [33m[1mWARNING [39m[22m | [36mutils.utils[39m:[36mload_checkpoint_with_missing_or_exsessive_keys[39m:[36m108[39m - [33m[1mexcessive key: model.ffn_attention.0.4.norm.weight
[32m2024-05-07 22:03:13.541[39m | [33m[1mWARNING [39m[22m | [36mutils.utils[39m:[36mload_checkpoint_with_missing_or_exsessive_keys[39m:[36m108[39m - [33m[1mexcessive key: model.ffn_attention.0.4.norm.bias
[32m2024-05-07 22:03:13.541[39m | [33m[1mWARNING [39m[22m | [36mutils.utils[39m:[36mload_checkpoint_with_missing_or_exsessive_keys[39m:[36m108[39m - [33m[1mexcessive key: model.lin_squeeze.0.4.weight
[32m2024-05-07 22:03:13.541[39m | [33m[1mWARNING [39m[22m | [36mutils.utils[39m:[36mload_checkpoint_with_missing_or_exsessive_keys[39m:[36m108[39m - [33m[1mexcessive key: model.lin_squeeze.0.4.bias
/home/songoh/miniconda3/envs/mask/lib/python3.10/site-packages/pytorch_lightning/trainer/connectors/accelerator_connector.py:446: LightningDeprecationWarning: Setting `Trainer(gpus=1)` is deprecated in v1.7 and will be removed in v2.0. Please use `Trainer(accelerator='gpu', devices=1)` instead.
  rank_zero_deprecation(
/home/songoh/miniconda3/envs/mask/lib/python3.10/site-packages/pytorch_lightning/trainer/connectors/checkpoint_connector.py:52: LightningDeprecationWarning: Setting `Trainer(resume_from_checkpoint=)` is deprecated in v1.5 and will be removed in v1.7. Please pass `Trainer.fit(ckpt_path=)` directly instead.
  rank_zero_deprecation(
/home/songoh/miniconda3/envs/mask/lib/python3.10/site-packages/pytorch_lightning/trainer/connectors/callback_connector.py:57: LightningDeprecationWarning: Setting `Trainer(weights_save_path=)` has been deprecated in v1.6 and will be removed in v1.8. Please pass ``dirpath`` directly to the `ModelCheckpoint` callback
  rank_zero_deprecation(
GPU available: True (cuda), used: True
TPU available: False, using: 0 TPU cores
IPU available: False, using: 0 IPUs
HPU available: False, using: 0 HPUs
/media/songoh/ssh2/song_ws/T3DIS_backup/MaskDNtoBBox_GPU0/datasets/semseg.py:573: YAMLLoadWarning: calling yaml.load() without Loader=... is deprecated, as the default Loader is unsafe. Please read https://msg.pyyaml.org/load for full details.
  file = yaml.load(f)
[2024-05-07 22:03:13,599][__main__][INFO] - {'general_train_mode': False, 'general_task': 'instance_segmentation', 'general_seed': None, 'general_checkpoint': 'saved/Query_selection_test/epoch=599-val_mean_ap_50=0.641.ckpt', 'general_backbone_checkpoint': None, 'general_freeze_backbone': False, 'general_linear_probing_backbone': False, 'general_train_on_segments': True, 'general_eval_on_segments': True, 'general_filter_out_instances': True, 'general_save_visualizations': False, 'general_visualization_point_size': 20, 'general_decoder_id': -1, 'general_export': False, 'general_use_dbscan': True, 'general_ignore_class_threshold': 100, 'general_project_name': 'scannet', 'general_workspace': 'jonasschult', 'general_experiment_name': 'DEBUG_ABLATION', 'general_num_targets': 19, 'general_add_instance': True, 'general_dbscan_eps': 0.95, 'general_dbscan_min_points': 1, 'general_export_threshold': 0.0001, 'general_reps_per_epoch': 1, 'general_on_crops': False, 'general_scores_threshold': 0.8, 'general_iou_threshold': 1.0, 'general_area': 5, 'general_eval_inner_core': -1, 'general_topk_per_image': -1, 'general_ignore_mask_idx': [], 'general_max_batch_size': 99999999, 'general_save_dir': 'saved/DEBUG_ABLATION', 'general_gpus': 1, 'data_train_mode': 'train', 'data_validation_mode': 'validation', 'data_test_mode': 'validation', 'data_ignore_label': 255, 'data_add_raw_coordinates': True, 'data_add_colors': True, 'data_add_normals': False, 'data_in_channels': 3, 'data_num_labels': 20, 'data_add_instance': True, 'data_task': 'instance_segmentation', 'data_pin_memory': False, 'data_num_workers': 4, 'data_batch_size': 3, 'data_test_batch_size': 1, 'data_cache_data': False, 'data_voxel_size': 0.02, 'data_reps_per_epoch': 1, 'data_cropping': False, 'data_cropping_args_min_points': 30000, 'data_cropping_args_aspect': 0.8, 'data_cropping_args_min_crop': 0.5, 'data_cropping_args_max_crop': 1.0, 'data_crop_min_size': 20000, 'data_crop_length': 6.0, 'data_cropping_v1': True, 'data_train_dataloader__target_': 'torch.utils.data.DataLoader', 'data_train_dataloader_shuffle': True, 'data_train_dataloader_pin_memory': False, 'data_train_dataloader_num_workers': 4, 'data_train_dataloader_batch_size': 3, 'data_validation_dataloader__target_': 'torch.utils.data.DataLoader', 'data_validation_dataloader_shuffle': False, 'data_validation_dataloader_pin_memory': False, 'data_validation_dataloader_num_workers': 4, 'data_validation_dataloader_batch_size': 1, 'data_test_dataloader__target_': 'torch.utils.data.DataLoader', 'data_test_dataloader_shuffle': False, 'data_test_dataloader_pin_memory': False, 'data_test_dataloader_num_workers': 4, 'data_test_dataloader_batch_size': 1, 'data_train_dataset__target_': 'datasets.semseg.SemanticSegmentationDataset', 'data_train_dataset_dataset_name': 'scannet', 'data_train_dataset_data_dir': 'data/processed/scannet', 'data_train_dataset_image_augmentations_path': 'conf/augmentation/albumentations_aug.yaml', 'data_train_dataset_volume_augmentations_path': 'conf/augmentation/volumentations_aug.yaml', 'data_train_dataset_label_db_filepath': 'data/processed/scannet/label_database.yaml', 'data_train_dataset_color_mean_std': 'data/processed/scannet/color_mean_std.yaml', 'data_train_dataset_data_percent': 1.0, 'data_train_dataset_mode': 'train', 'data_train_dataset_ignore_label': 255, 'data_train_dataset_num_labels': 20, 'data_train_dataset_add_raw_coordinates': True, 'data_train_dataset_add_colors': True, 'data_train_dataset_add_normals': False, 'data_train_dataset_add_instance': True, 'data_train_dataset_instance_oversampling': 0.0, 'data_train_dataset_place_around_existing': False, 'data_train_dataset_point_per_cut': 0, 'data_train_dataset_max_cut_region': 0, 'data_train_dataset_flip_in_center': False, 'data_train_dataset_noise_rate': 0, 'data_train_dataset_resample_points': 0, 'data_train_dataset_add_unlabeled_pc': False, 'data_train_dataset_cropping': False, 'data_train_dataset_cropping_args_min_points': 30000, 'data_train_dataset_cropping_args_aspect': 0.8, 'data_train_dataset_cropping_args_min_crop': 0.5, 'data_train_dataset_cropping_args_max_crop': 1.0, 'data_train_dataset_is_tta': False, 'data_train_dataset_crop_min_size': 20000, 'data_train_dataset_crop_length': 6.0, 'data_train_dataset_filter_out_classes': [0, 1], 'data_train_dataset_label_offset': 2, 'data_validation_dataset__target_': 'datasets.semseg.SemanticSegmentationDataset', 'data_validation_dataset_dataset_name': 'scannet', 'data_validation_dataset_data_dir': 'data/processed/scannet', 'data_validation_dataset_image_augmentations_path': None, 'data_validation_dataset_volume_augmentations_path': None, 'data_validation_dataset_label_db_filepath': 'data/processed/scannet/label_database.yaml', 'data_validation_dataset_color_mean_std': 'data/processed/scannet/color_mean_std.yaml', 'data_validation_dataset_data_percent': 1.0, 'data_validation_dataset_mode': 'validation', 'data_validation_dataset_ignore_label': 255, 'data_validation_dataset_num_labels': 20, 'data_validation_dataset_add_raw_coordinates': True, 'data_validation_dataset_add_colors': True, 'data_validation_dataset_add_normals': False, 'data_validation_dataset_add_instance': True, 'data_validation_dataset_cropping': False, 'data_validation_dataset_is_tta': False, 'data_validation_dataset_crop_min_size': 20000, 'data_validation_dataset_crop_length': 6.0, 'data_validation_dataset_filter_out_classes': [0, 1], 'data_validation_dataset_label_offset': 2, 'data_test_dataset__target_': 'datasets.semseg.SemanticSegmentationDataset', 'data_test_dataset_dataset_name': 'scannet', 'data_test_dataset_data_dir': 'data/processed/scannet', 'data_test_dataset_image_augmentations_path': None, 'data_test_dataset_volume_augmentations_path': None, 'data_test_dataset_label_db_filepath': 'data/processed/scannet/label_database.yaml', 'data_test_dataset_color_mean_std': 'data/processed/scannet/color_mean_std.yaml', 'data_test_dataset_data_percent': 1.0, 'data_test_dataset_mode': 'validation', 'data_test_dataset_ignore_label': 255, 'data_test_dataset_num_labels': 20, 'data_test_dataset_add_raw_coordinates': True, 'data_test_dataset_add_colors': True, 'data_test_dataset_add_normals': False, 'data_test_dataset_add_instance': True, 'data_test_dataset_cropping': False, 'data_test_dataset_is_tta': False, 'data_test_dataset_crop_min_size': 20000, 'data_test_dataset_crop_length': 6.0, 'data_test_dataset_filter_out_classes': [0, 1], 'data_test_dataset_label_offset': 2, 'data_train_collation__target_': 'datasets.utils.VoxelizeCollate', 'data_train_collation_ignore_label': 255, 'data_train_collation_voxel_size': 0.02, 'data_train_collation_mode': 'train', 'data_train_collation_small_crops': False, 'data_train_collation_very_small_crops': False, 'data_train_collation_batch_instance': False, 'data_train_collation_probing': False, 'data_train_collation_task': 'instance_segmentation', 'data_train_collation_ignore_class_threshold': 100, 'data_train_collation_filter_out_classes': [0, 1], 'data_train_collation_label_offset': 2, 'data_train_collation_num_queries': 150, 'data_validation_collation__target_': 'datasets.utils.VoxelizeCollate', 'data_validation_collation_ignore_label': 255, 'data_validation_collation_voxel_size': 0.02, 'data_validation_collation_mode': 'validation', 'data_validation_collation_batch_instance': False, 'data_validation_collation_probing': False, 'data_validation_collation_task': 'instance_segmentation', 'data_validation_collation_ignore_class_threshold': 100, 'data_validation_collation_filter_out_classes': [0, 1], 'data_validation_collation_label_offset': 2, 'data_validation_collation_num_queries': 150, 'data_test_collation__target_': 'datasets.utils.VoxelizeCollate', 'data_test_collation_ignore_label': 255, 'data_test_collation_voxel_size': 0.02, 'data_test_collation_mode': 'validation', 'data_test_collation_batch_instance': False, 'data_test_collation_probing': False, 'data_test_collation_task': 'instance_segmentation', 'data_test_collation_ignore_class_threshold': 100, 'data_test_collation_filter_out_classes': [0, 1], 'data_test_collation_label_offset': 2, 'data_test_collation_num_queries': 150, 'logging': [{'_target_': 'pytorch_lightning.loggers.WandbLogger', 'project': 'scannet', 'name': 'DEBUG_ABLATION', 'save_dir': 'saved/DEBUG_ABLATION', 'entity': 'schult', 'resume': 'allow', 'id': 'DEBUG_ABLATION'}], 'model__target_': 'models.Mask3D', 'model_hidden_dim': 128, 'model_dim_feedforward': 1024, 'model_num_queries': 150, 'model_num_heads': 8, 'model_num_decoders': 3, 'model_dropout': 0.0, 'model_pre_norm': False, 'model_use_level_embed': False, 'model_normalize_pos_enc': True, 'model_positional_encoding_type': 'fourier', 'model_gauss_scale': 1.0, 'model_hlevels': [0, 1, 2, 3], 'model_anchor_dim': 3, 'model_non_parametric_queries': False, 'model_random_query_both': False, 'model_random_normal': False, 'model_random_queries': False, 'model_use_np_features': False, 'model_query_selection': True, 'model_sample_sizes': [200, 800, 3200, 12800, 51200], 'model_max_sample_size': False, 'model_shared_decoder': True, 'model_num_classes': 19, 'model_train_on_segments': True, 'model_scatter_type': 'mean', 'model_voxel_size': 0.02, 'model_config_backbone__target_': 'models.Res16UNet34C', 'model_config_backbone_config_dialations': [1, 1, 1, 1], 'model_config_backbone_config_conv1_kernel_size': 5, 'model_config_backbone_config_bn_momentum': 0.02, 'model_config_backbone_in_channels': 3, 'model_config_backbone_out_channels': 20, 'model_config_backbone_out_fpn': True, 'metrics__target_': 'models.metrics.ConfusionMatrix', 'metrics_num_classes': 20, 'metrics_ignore_label': 255, 'optimizer__target_': 'torch.optim.AdamW', 'optimizer_lr': 0.0001, 'scheduler_scheduler__target_': 'torch.optim.lr_scheduler.OneCycleLR', 'scheduler_scheduler_max_lr': 0.0001, 'scheduler_scheduler_epochs': 1001, 'scheduler_scheduler_steps_per_epoch': -1, 'scheduler_pytorch_lightning_params_interval': 'step', 'trainer_deterministic': False, 'trainer_max_epochs': 1001, 'trainer_min_epochs': 1, 'trainer_resume_from_checkpoint': 'saved/DEBUG_ABLATION/last-epoch.ckpt', 'trainer_check_val_every_n_epoch': 50, 'trainer_num_sanity_val_steps': 2, 'callbacks': [{'_target_': 'pytorch_lightning.callbacks.ModelCheckpoint', 'monitor': 'val_mean_ap_50', 'save_last': True, 'save_top_k': 1, 'mode': 'max', 'dirpath': 'saved/DEBUG_ABLATION', 'filename': '{epoch}-{val_mean_ap_50:.3f}', 'every_n_epochs': 1}, {'_target_': 'pytorch_lightning.callbacks.LearningRateMonitor'}], 'matcher__target_': 'models.matcher.HungarianMatcher', 'matcher_cost_class': 2.0, 'matcher_cost_mask': 5.0, 'matcher_cost_dice': 2.0, 'matcher_cost_box': 1.0, 'matcher_cost_giou': 1.0, 'matcher_num_points': -1, 'loss__target_': 'models.criterion.SetCriterion', 'loss_num_classes': 19, 'loss_eos_coef': 0.1, 'loss_losses': ['labels', 'masks'], 'loss_num_points': -1, 'loss_oversample_ratio': 3.0, 'loss_importance_sample_ratio': 0.75, 'loss_class_weights': -1}
LOCAL_RANK: 0 - CUDA_VISIBLE_DEVICES: [0]
Testing DataLoader 0:   0%|          | 0/312 [00:00<?, ?it/s]
/media/songoh/ssh2/song_ws/T3DIS_backup/MaskDNtoBBox_GPU0/trainer/trainer.py:524: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').

Testing DataLoader 0:   0%|          | 1/312 [00:33<2:55:21, 33.83s/it]
/media/songoh/ssh2/song_ws/T3DIS_backup/MaskDNtoBBox_GPU0/trainer/trainer.py:524: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').

Testing DataLoader 0:   1%|          | 2/312 [01:02<2:42:06, 31.38s/it]
/media/songoh/ssh2/song_ws/T3DIS_backup/MaskDNtoBBox_GPU0/trainer/trainer.py:524: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').

Testing DataLoader 0:   1%|          | 3/312 [01:27<2:29:58, 29.12s/it]
/media/songoh/ssh2/song_ws/T3DIS_backup/MaskDNtoBBox_GPU0/trainer/trainer.py:524: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').

Testing DataLoader 0:   1%|▏         | 4/312 [02:00<2:34:42, 30.14s/it]
/media/songoh/ssh2/song_ws/T3DIS_backup/MaskDNtoBBox_GPU0/trainer/trainer.py:524: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').

Testing DataLoader 0:   2%|▏         | 5/312 [02:47<2:51:45, 33.57s/it]
/media/songoh/ssh2/song_ws/T3DIS_backup/MaskDNtoBBox_GPU0/trainer/trainer.py:524: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').

Testing DataLoader 0:   2%|▏         | 6/312 [03:00<2:33:48, 30.16s/it]
/media/songoh/ssh2/song_ws/T3DIS_backup/MaskDNtoBBox_GPU0/trainer/trainer.py:524: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').

Testing DataLoader 0:   2%|▏         | 7/312 [03:21<2:26:15, 28.77s/it]
/media/songoh/ssh2/song_ws/T3DIS_backup/MaskDNtoBBox_GPU0/trainer/trainer.py:524: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  topk_indices = topk_indices // num_classes
/media/songoh/ssh2/song_ws/T3DIS_backup/MaskDNtoBBox_GPU0/trainer/trainer.py:647: RuntimeWarning: invalid value encountered in divide

Testing DataLoader 0:   3%|▎         | 8/312 [03:39<2:19:11, 27.47s/it]
/media/songoh/ssh2/song_ws/T3DIS_backup/MaskDNtoBBox_GPU0/trainer/trainer.py:524: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').

Testing DataLoader 0:   3%|▎         | 9/312 [04:07<2:18:47, 27.48s/it]
/media/songoh/ssh2/song_ws/T3DIS_backup/MaskDNtoBBox_GPU0/trainer/trainer.py:524: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').

Testing DataLoader 0:   3%|▎         | 10/312 [04:34<2:18:04, 27.43s/it]
/media/songoh/ssh2/song_ws/T3DIS_backup/MaskDNtoBBox_GPU0/trainer/trainer.py:524: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').

Testing DataLoader 0:   4%|▎         | 11/312 [05:03<2:18:38, 27.64s/it]
/media/songoh/ssh2/song_ws/T3DIS_backup/MaskDNtoBBox_GPU0/trainer/trainer.py:524: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').

Testing DataLoader 0:   4%|▍         | 12/312 [05:20<2:13:35, 26.72s/it]
/media/songoh/ssh2/song_ws/T3DIS_backup/MaskDNtoBBox_GPU0/trainer/trainer.py:524: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').

Testing DataLoader 0:   4%|▍         | 13/312 [05:41<2:10:56, 26.28s/it]
/media/songoh/ssh2/song_ws/T3DIS_backup/MaskDNtoBBox_GPU0/trainer/trainer.py:524: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').

Testing DataLoader 0:   4%|▍         | 14/312 [05:56<2:06:25, 25.45s/it]
/media/songoh/ssh2/song_ws/T3DIS_backup/MaskDNtoBBox_GPU0/trainer/trainer.py:524: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').

Testing DataLoader 0:   5%|▍         | 15/312 [06:25<2:07:21, 25.73s/it]
/media/songoh/ssh2/song_ws/T3DIS_backup/MaskDNtoBBox_GPU0/trainer/trainer.py:524: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').

Testing DataLoader 0:   5%|▌         | 16/312 [06:48<2:06:01, 25.55s/it]
/media/songoh/ssh2/song_ws/T3DIS_backup/MaskDNtoBBox_GPU0/trainer/trainer.py:524: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').

Testing DataLoader 0:   5%|▌         | 17/312 [07:09<2:04:16, 25.28s/it]
/media/songoh/ssh2/song_ws/T3DIS_backup/MaskDNtoBBox_GPU0/trainer/trainer.py:524: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').

Testing DataLoader 0:   6%|▌         | 18/312 [07:27<2:01:56, 24.89s/it]
/media/songoh/ssh2/song_ws/T3DIS_backup/MaskDNtoBBox_GPU0/trainer/trainer.py:524: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').

Testing DataLoader 0:   6%|▌         | 19/312 [09:23<2:24:49, 29.66s/it]
/media/songoh/ssh2/song_ws/T3DIS_backup/MaskDNtoBBox_GPU0/trainer/trainer.py:524: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').

Testing DataLoader 0:   6%|▋         | 20/312 [10:42<2:36:21, 32.13s/it]
/media/songoh/ssh2/song_ws/T3DIS_backup/MaskDNtoBBox_GPU0/trainer/trainer.py:524: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').

Testing DataLoader 0:   7%|▋         | 21/312 [10:57<2:31:51, 31.31s/it]
/media/songoh/ssh2/song_ws/T3DIS_backup/MaskDNtoBBox_GPU0/trainer/trainer.py:524: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').

Testing DataLoader 0:   7%|▋         | 22/312 [11:22<2:29:51, 31.01s/it]
/media/songoh/ssh2/song_ws/T3DIS_backup/MaskDNtoBBox_GPU0/trainer/trainer.py:524: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').

Testing DataLoader 0:   7%|▋         | 23/312 [11:34<2:25:26, 30.19s/it]
/media/songoh/ssh2/song_ws/T3DIS_backup/MaskDNtoBBox_GPU0/trainer/trainer.py:524: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').

Testing DataLoader 0:   8%|▊         | 24/312 [12:05<2:25:05, 30.23s/it]
/media/songoh/ssh2/song_ws/T3DIS_backup/MaskDNtoBBox_GPU0/trainer/trainer.py:524: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').

Testing DataLoader 0:   8%|▊         | 25/312 [12:33<2:24:13, 30.15s/it]
/media/songoh/ssh2/song_ws/T3DIS_backup/MaskDNtoBBox_GPU0/trainer/trainer.py:524: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').

Testing DataLoader 0:   8%|▊         | 26/312 [12:44<2:20:05, 29.39s/it]
/media/songoh/ssh2/song_ws/T3DIS_backup/MaskDNtoBBox_GPU0/trainer/trainer.py:524: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').

Testing DataLoader 0:   9%|▊         | 27/312 [12:51<2:15:47, 28.59s/it]
/media/songoh/ssh2/song_ws/T3DIS_backup/MaskDNtoBBox_GPU0/trainer/trainer.py:524: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').

Testing DataLoader 0:   9%|▉         | 28/312 [12:58<2:11:35, 27.80s/it]
/media/songoh/ssh2/song_ws/T3DIS_backup/MaskDNtoBBox_GPU0/trainer/trainer.py:524: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').

Testing DataLoader 0:   9%|▉         | 29/312 [13:15<2:09:26, 27.44s/it]
/media/songoh/ssh2/song_ws/T3DIS_backup/MaskDNtoBBox_GPU0/trainer/trainer.py:524: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').

Testing DataLoader 0:  10%|▉         | 30/312 [13:35<2:07:49, 27.20s/it]
/media/songoh/ssh2/song_ws/T3DIS_backup/MaskDNtoBBox_GPU0/trainer/trainer.py:524: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').

Testing DataLoader 0:  10%|▉         | 31/312 [13:47<2:05:02, 26.70s/it]
/media/songoh/ssh2/song_ws/T3DIS_backup/MaskDNtoBBox_GPU0/trainer/trainer.py:524: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').

Testing DataLoader 0:  10%|█         | 32/312 [14:12<2:04:20, 26.64s/it]
/media/songoh/ssh2/song_ws/T3DIS_backup/MaskDNtoBBox_GPU0/trainer/trainer.py:524: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').

Testing DataLoader 0:  11%|█         | 33/312 [14:28<2:02:19, 26.30s/it]
/media/songoh/ssh2/song_ws/T3DIS_backup/MaskDNtoBBox_GPU0/trainer/trainer.py:524: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').

Testing DataLoader 0:  11%|█         | 34/312 [14:52<2:01:33, 26.24s/it]
/media/songoh/ssh2/song_ws/T3DIS_backup/MaskDNtoBBox_GPU0/trainer/trainer.py:524: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').

Testing DataLoader 0:  11%|█         | 35/312 [15:18<2:01:10, 26.25s/it]
/media/songoh/ssh2/song_ws/T3DIS_backup/MaskDNtoBBox_GPU0/trainer/trainer.py:524: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').

Testing DataLoader 0:  12%|█▏        | 36/312 [15:50<2:01:26, 26.40s/it]
/media/songoh/ssh2/song_ws/T3DIS_backup/MaskDNtoBBox_GPU0/trainer/trainer.py:524: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').

Testing DataLoader 0:  12%|█▏        | 37/312 [16:17<2:01:04, 26.42s/it]
/media/songoh/ssh2/song_ws/T3DIS_backup/MaskDNtoBBox_GPU0/trainer/trainer.py:524: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').

Testing DataLoader 0:  12%|█▏        | 38/312 [16:24<1:58:22, 25.92s/it]
/media/songoh/ssh2/song_ws/T3DIS_backup/MaskDNtoBBox_GPU0/trainer/trainer.py:524: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').

Testing DataLoader 0:  12%|█▎        | 39/312 [16:34<1:56:03, 25.51s/it]
/media/songoh/ssh2/song_ws/T3DIS_backup/MaskDNtoBBox_GPU0/trainer/trainer.py:524: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').

Testing DataLoader 0:  13%|█▎        | 40/312 [16:42<1:53:35, 25.06s/it]
/media/songoh/ssh2/song_ws/T3DIS_backup/MaskDNtoBBox_GPU0/trainer/trainer.py:524: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').

Testing DataLoader 0:  13%|█▎        | 41/312 [16:51<1:51:23, 24.66s/it]
/media/songoh/ssh2/song_ws/T3DIS_backup/MaskDNtoBBox_GPU0/trainer/trainer.py:524: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').

Testing DataLoader 0:  13%|█▎        | 42/312 [17:03<1:49:42, 24.38s/it]
/media/songoh/ssh2/song_ws/T3DIS_backup/MaskDNtoBBox_GPU0/trainer/trainer.py:524: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').

Testing DataLoader 0:  14%|█▍        | 43/312 [17:11<1:47:35, 24.00s/it]
/media/songoh/ssh2/song_ws/T3DIS_backup/MaskDNtoBBox_GPU0/trainer/trainer.py:524: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').

Testing DataLoader 0:  14%|█▍        | 44/312 [17:21<1:45:46, 23.68s/it]
/media/songoh/ssh2/song_ws/T3DIS_backup/MaskDNtoBBox_GPU0/trainer/trainer.py:524: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').

Testing DataLoader 0:  14%|█▍        | 45/312 [17:37<1:44:34, 23.50s/it]
/media/songoh/ssh2/song_ws/T3DIS_backup/MaskDNtoBBox_GPU0/trainer/trainer.py:524: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').

Testing DataLoader 0:  15%|█▍        | 46/312 [17:50<1:43:08, 23.26s/it]
/media/songoh/ssh2/song_ws/T3DIS_backup/MaskDNtoBBox_GPU0/trainer/trainer.py:524: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').

Testing DataLoader 0:  15%|█▌        | 47/312 [17:57<1:41:14, 22.92s/it]
/media/songoh/ssh2/song_ws/T3DIS_backup/MaskDNtoBBox_GPU0/trainer/trainer.py:524: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').

Testing DataLoader 0:  15%|█▌        | 48/312 [18:05<1:39:29, 22.61s/it]
/media/songoh/ssh2/song_ws/T3DIS_backup/MaskDNtoBBox_GPU0/trainer/trainer.py:524: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').

Testing DataLoader 0:  16%|█▌        | 49/312 [18:11<1:37:39, 22.28s/it]
/media/songoh/ssh2/song_ws/T3DIS_backup/MaskDNtoBBox_GPU0/trainer/trainer.py:524: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').

Testing DataLoader 0:  16%|█▌        | 50/312 [18:33<1:37:13, 22.27s/it]
/media/songoh/ssh2/song_ws/T3DIS_backup/MaskDNtoBBox_GPU0/trainer/trainer.py:524: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').

Testing DataLoader 0:  16%|█▋        | 51/312 [18:39<1:35:30, 21.96s/it]
/media/songoh/ssh2/song_ws/T3DIS_backup/MaskDNtoBBox_GPU0/trainer/trainer.py:524: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').

Testing DataLoader 0:  17%|█▋        | 52/312 [18:44<1:33:43, 21.63s/it]
/media/songoh/ssh2/song_ws/T3DIS_backup/MaskDNtoBBox_GPU0/trainer/trainer.py:524: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').

Testing DataLoader 0:  17%|█▋        | 53/312 [18:56<1:32:35, 21.45s/it]
/media/songoh/ssh2/song_ws/T3DIS_backup/MaskDNtoBBox_GPU0/trainer/trainer.py:524: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').

Testing DataLoader 0:  17%|█▋        | 54/312 [19:07<1:31:24, 21.26s/it]
/media/songoh/ssh2/song_ws/T3DIS_backup/MaskDNtoBBox_GPU0/trainer/trainer.py:524: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').

Testing DataLoader 0:  18%|█▊        | 55/312 [19:18<1:30:12, 21.06s/it]
/media/songoh/ssh2/song_ws/T3DIS_backup/MaskDNtoBBox_GPU0/trainer/trainer.py:524: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').

Testing DataLoader 0:  18%|█▊        | 56/312 [19:31<1:29:14, 20.92s/it]
/media/songoh/ssh2/song_ws/T3DIS_backup/MaskDNtoBBox_GPU0/trainer/trainer.py:524: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').

Testing DataLoader 0:  18%|█▊        | 57/312 [19:53<1:28:58, 20.94s/it]
/media/songoh/ssh2/song_ws/T3DIS_backup/MaskDNtoBBox_GPU0/trainer/trainer.py:524: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').

Testing DataLoader 0:  19%|█▊        | 58/312 [20:20<1:29:02, 21.03s/it]
/media/songoh/ssh2/song_ws/T3DIS_backup/MaskDNtoBBox_GPU0/trainer/trainer.py:524: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').

Testing DataLoader 0:  19%|█▉        | 59/312 [21:25<1:31:54, 21.80s/it]
/media/songoh/ssh2/song_ws/T3DIS_backup/MaskDNtoBBox_GPU0/trainer/trainer.py:524: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').

Testing DataLoader 0:  19%|█▉        | 60/312 [22:21<1:33:53, 22.36s/it]
/media/songoh/ssh2/song_ws/T3DIS_backup/MaskDNtoBBox_GPU0/trainer/trainer.py:524: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').

Testing DataLoader 0:  20%|█▉        | 61/312 [22:39<1:33:12, 22.28s/it]
/media/songoh/ssh2/song_ws/T3DIS_backup/MaskDNtoBBox_GPU0/trainer/trainer.py:524: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').

Testing DataLoader 0:  20%|█▉        | 62/312 [22:58<1:32:38, 22.23s/it]
/media/songoh/ssh2/song_ws/T3DIS_backup/MaskDNtoBBox_GPU0/trainer/trainer.py:524: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').

Testing DataLoader 0:  20%|██        | 63/312 [23:17<1:32:03, 22.18s/it]
/media/songoh/ssh2/song_ws/T3DIS_backup/MaskDNtoBBox_GPU0/trainer/trainer.py:524: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').

Testing DataLoader 0:  21%|██        | 64/312 [23:46<1:32:07, 22.29s/it]
/media/songoh/ssh2/song_ws/T3DIS_backup/MaskDNtoBBox_GPU0/trainer/trainer.py:524: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').

Testing DataLoader 0:  21%|██        | 65/312 [24:12<1:31:57, 22.34s/it]
/media/songoh/ssh2/song_ws/T3DIS_backup/MaskDNtoBBox_GPU0/trainer/trainer.py:524: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').

Testing DataLoader 0:  21%|██        | 66/312 [24:47<1:32:23, 22.53s/it]
/media/songoh/ssh2/song_ws/T3DIS_backup/MaskDNtoBBox_GPU0/trainer/trainer.py:524: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').

Testing DataLoader 0:  21%|██▏       | 67/312 [25:03<1:31:36, 22.43s/it]
/media/songoh/ssh2/song_ws/T3DIS_backup/MaskDNtoBBox_GPU0/trainer/trainer.py:524: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').

Testing DataLoader 0:  22%|██▏       | 68/312 [25:21<1:30:59, 22.38s/it]
/media/songoh/ssh2/song_ws/T3DIS_backup/MaskDNtoBBox_GPU0/trainer/trainer.py:524: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').

Testing DataLoader 0:  22%|██▏       | 69/312 [25:43<1:30:37, 22.37s/it]
/media/songoh/ssh2/song_ws/T3DIS_backup/MaskDNtoBBox_GPU0/trainer/trainer.py:524: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').

Testing DataLoader 0:  22%|██▏       | 70/312 [27:41<1:35:45, 23.74s/it]
/media/songoh/ssh2/song_ws/T3DIS_backup/MaskDNtoBBox_GPU0/trainer/trainer.py:524: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').

Testing DataLoader 0:  23%|██▎       | 71/312 [27:57<1:34:54, 23.63s/it]
/media/songoh/ssh2/song_ws/T3DIS_backup/MaskDNtoBBox_GPU0/trainer/trainer.py:524: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').

Testing DataLoader 0:  23%|██▎       | 72/312 [28:15<1:34:12, 23.55s/it]
/media/songoh/ssh2/song_ws/T3DIS_backup/MaskDNtoBBox_GPU0/trainer/trainer.py:524: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').

Testing DataLoader 0:  23%|██▎       | 73/312 [28:36<1:33:38, 23.51s/it]
/media/songoh/ssh2/song_ws/T3DIS_backup/MaskDNtoBBox_GPU0/trainer/trainer.py:524: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').

Testing DataLoader 0:  24%|██▎       | 74/312 [29:09<1:33:47, 23.64s/it]
/media/songoh/ssh2/song_ws/T3DIS_backup/MaskDNtoBBox_GPU0/trainer/trainer.py:524: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').

Testing DataLoader 0:  24%|██▍       | 75/312 [29:34<1:33:28, 23.66s/it]
/media/songoh/ssh2/song_ws/T3DIS_backup/MaskDNtoBBox_GPU0/trainer/trainer.py:524: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').

Testing DataLoader 0:  24%|██▍       | 76/312 [30:37<1:35:04, 24.17s/it]
/media/songoh/ssh2/song_ws/T3DIS_backup/MaskDNtoBBox_GPU0/trainer/trainer.py:524: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').

Testing DataLoader 0:  25%|██▍       | 77/312 [31:38<1:36:35, 24.66s/it]
/media/songoh/ssh2/song_ws/T3DIS_backup/MaskDNtoBBox_GPU0/trainer/trainer.py:524: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').

Testing DataLoader 0:  25%|██▌       | 78/312 [32:25<1:37:16, 24.94s/it]
/media/songoh/ssh2/song_ws/T3DIS_backup/MaskDNtoBBox_GPU0/trainer/trainer.py:524: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').

Testing DataLoader 0:  25%|██▌       | 79/312 [32:44<1:36:34, 24.87s/it]
/media/songoh/ssh2/song_ws/T3DIS_backup/MaskDNtoBBox_GPU0/trainer/trainer.py:524: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').

Testing DataLoader 0:  26%|██▌       | 80/312 [33:29<1:37:08, 25.12s/it]
/media/songoh/ssh2/song_ws/T3DIS_backup/MaskDNtoBBox_GPU0/trainer/trainer.py:524: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').

Testing DataLoader 0:  26%|██▌       | 81/312 [34:05<1:37:12, 25.25s/it]
/media/songoh/ssh2/song_ws/T3DIS_backup/MaskDNtoBBox_GPU0/trainer/trainer.py:524: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').

Testing DataLoader 0:  26%|██▋       | 82/312 [34:16<1:36:08, 25.08s/it]
/media/songoh/ssh2/song_ws/T3DIS_backup/MaskDNtoBBox_GPU0/trainer/trainer.py:524: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').

Testing DataLoader 0:  27%|██▋       | 83/312 [34:27<1:35:03, 24.91s/it]
/media/songoh/ssh2/song_ws/T3DIS_backup/MaskDNtoBBox_GPU0/trainer/trainer.py:524: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').

Testing DataLoader 0:  27%|██▋       | 84/312 [34:42<1:34:13, 24.80s/it]
/media/songoh/ssh2/song_ws/T3DIS_backup/MaskDNtoBBox_GPU0/trainer/trainer.py:524: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').

Testing DataLoader 0:  27%|██▋       | 85/312 [35:08<1:33:50, 24.80s/it]
/media/songoh/ssh2/song_ws/T3DIS_backup/MaskDNtoBBox_GPU0/trainer/trainer.py:524: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').

Testing DataLoader 0:  28%|██▊       | 86/312 [35:25<1:33:06, 24.72s/it]
/media/songoh/ssh2/song_ws/T3DIS_backup/MaskDNtoBBox_GPU0/trainer/trainer.py:524: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').

Testing DataLoader 0:  28%|██▊       | 87/312 [35:38<1:32:10, 24.58s/it]
/media/songoh/ssh2/song_ws/T3DIS_backup/MaskDNtoBBox_GPU0/trainer/trainer.py:524: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').

Testing DataLoader 0:  28%|██▊       | 88/312 [35:52<1:31:20, 24.46s/it]
/media/songoh/ssh2/song_ws/T3DIS_backup/MaskDNtoBBox_GPU0/trainer/trainer.py:524: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').

Testing DataLoader 0:  29%|██▊       | 89/312 [36:05<1:30:26, 24.33s/it]
/media/songoh/ssh2/song_ws/T3DIS_backup/MaskDNtoBBox_GPU0/trainer/trainer.py:524: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').

Testing DataLoader 0:  29%|██▉       | 90/312 [36:17<1:29:30, 24.19s/it]
/media/songoh/ssh2/song_ws/T3DIS_backup/MaskDNtoBBox_GPU0/trainer/trainer.py:524: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').

Testing DataLoader 0:  29%|██▉       | 91/312 [36:35<1:28:51, 24.12s/it]
/media/songoh/ssh2/song_ws/T3DIS_backup/MaskDNtoBBox_GPU0/trainer/trainer.py:524: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').

Testing DataLoader 0:  29%|██▉       | 92/312 [36:50<1:28:05, 24.03s/it]
/media/songoh/ssh2/song_ws/T3DIS_backup/MaskDNtoBBox_GPU0/trainer/trainer.py:524: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').

Testing DataLoader 0:  30%|██▉       | 93/312 [37:43<1:28:49, 24.34s/it]
/media/songoh/ssh2/song_ws/T3DIS_backup/MaskDNtoBBox_GPU0/trainer/trainer.py:524: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').

Testing DataLoader 0:  30%|███       | 94/312 [38:33<1:29:25, 24.61s/it]
/media/songoh/ssh2/song_ws/T3DIS_backup/MaskDNtoBBox_GPU0/trainer/trainer.py:524: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').

Testing DataLoader 0:  30%|███       | 95/312 [39:45<1:30:48, 25.11s/it]
/media/songoh/ssh2/song_ws/T3DIS_backup/MaskDNtoBBox_GPU0/trainer/trainer.py:524: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').

Testing DataLoader 0:  31%|███       | 96/312 [40:53<1:32:00, 25.56s/it]
/media/songoh/ssh2/song_ws/T3DIS_backup/MaskDNtoBBox_GPU0/trainer/trainer.py:524: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').

Testing DataLoader 0:  31%|███       | 97/312 [41:19<1:31:36, 25.57s/it]
/media/songoh/ssh2/song_ws/T3DIS_backup/MaskDNtoBBox_GPU0/trainer/trainer.py:524: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').

Testing DataLoader 0:  31%|███▏      | 98/312 [41:40<1:31:00, 25.52s/it]
/media/songoh/ssh2/song_ws/T3DIS_backup/MaskDNtoBBox_GPU0/trainer/trainer.py:524: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').

Testing DataLoader 0:  32%|███▏      | 99/312 [42:11<1:30:45, 25.57s/it]
/media/songoh/ssh2/song_ws/T3DIS_backup/MaskDNtoBBox_GPU0/trainer/trainer.py:524: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').

Testing DataLoader 0:  32%|███▏      | 100/312 [43:17<1:31:46, 25.98s/it]
/media/songoh/ssh2/song_ws/T3DIS_backup/MaskDNtoBBox_GPU0/trainer/trainer.py:524: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').

Testing DataLoader 0:  32%|███▏      | 101/312 [43:58<1:31:52, 26.13s/it]
/media/songoh/ssh2/song_ws/T3DIS_backup/MaskDNtoBBox_GPU0/trainer/trainer.py:524: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').

Testing DataLoader 0:  33%|███▎      | 102/312 [44:32<1:31:42, 26.20s/it]
/media/songoh/ssh2/song_ws/T3DIS_backup/MaskDNtoBBox_GPU0/trainer/trainer.py:524: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').

Testing DataLoader 0:  33%|███▎      | 103/312 [46:05<1:33:31, 26.85s/it]
/media/songoh/ssh2/song_ws/T3DIS_backup/MaskDNtoBBox_GPU0/trainer/trainer.py:524: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').

Testing DataLoader 0:  33%|███▎      | 104/312 [48:10<1:36:21, 27.80s/it]
/media/songoh/ssh2/song_ws/T3DIS_backup/MaskDNtoBBox_GPU0/trainer/trainer.py:524: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').

Testing DataLoader 0:  34%|███▎      | 105/312 [50:02<1:38:39, 28.60s/it]
/media/songoh/ssh2/song_ws/T3DIS_backup/MaskDNtoBBox_GPU0/trainer/trainer.py:524: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').

Testing DataLoader 0:  34%|███▍      | 106/312 [50:21<1:37:52, 28.51s/it]
/media/songoh/ssh2/song_ws/T3DIS_backup/MaskDNtoBBox_GPU0/trainer/trainer.py:524: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').

Testing DataLoader 0:  34%|███▍      | 107/312 [50:37<1:37:00, 28.39s/it]
/media/songoh/ssh2/song_ws/T3DIS_backup/MaskDNtoBBox_GPU0/trainer/trainer.py:524: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').

Testing DataLoader 0:  35%|███▍      | 108/312 [50:48<1:35:58, 28.23s/it]
/media/songoh/ssh2/song_ws/T3DIS_backup/MaskDNtoBBox_GPU0/trainer/trainer.py:524: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').

Testing DataLoader 0:  35%|███▍      | 109/312 [51:24<1:35:45, 28.30s/it]
/media/songoh/ssh2/song_ws/T3DIS_backup/MaskDNtoBBox_GPU0/trainer/trainer.py:524: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').

Testing DataLoader 0:  35%|███▌      | 110/312 [51:59<1:35:28, 28.36s/it]
/media/songoh/ssh2/song_ws/T3DIS_backup/MaskDNtoBBox_GPU0/trainer/trainer.py:524: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').

Testing DataLoader 0:  36%|███▌      | 111/312 [52:18<1:34:43, 28.28s/it]
/media/songoh/ssh2/song_ws/T3DIS_backup/MaskDNtoBBox_GPU0/trainer/trainer.py:524: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').

Testing DataLoader 0:  36%|███▌      | 112/312 [52:41<1:34:05, 28.23s/it]
/media/songoh/ssh2/song_ws/T3DIS_backup/MaskDNtoBBox_GPU0/trainer/trainer.py:524: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').

Testing DataLoader 0:  36%|███▌      | 113/312 [53:13<1:33:43, 28.26s/it]
/media/songoh/ssh2/song_ws/T3DIS_backup/MaskDNtoBBox_GPU0/trainer/trainer.py:524: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').

Testing DataLoader 0:  37%|███▋      | 114/312 [53:48<1:33:26, 28.32s/it]
/media/songoh/ssh2/song_ws/T3DIS_backup/MaskDNtoBBox_GPU0/trainer/trainer.py:524: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').

Testing DataLoader 0:  37%|███▋      | 115/312 [54:11<1:32:49, 28.27s/it]
/media/songoh/ssh2/song_ws/T3DIS_backup/MaskDNtoBBox_GPU0/trainer/trainer.py:524: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').

Testing DataLoader 0:  37%|███▋      | 116/312 [54:25<1:31:58, 28.15s/it]
/media/songoh/ssh2/song_ws/T3DIS_backup/MaskDNtoBBox_GPU0/trainer/trainer.py:524: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').

Testing DataLoader 0:  38%|███▊      | 117/312 [55:23<1:32:19, 28.41s/it]
/media/songoh/ssh2/song_ws/T3DIS_backup/MaskDNtoBBox_GPU0/trainer/trainer.py:524: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').

Testing DataLoader 0:  38%|███▊      | 118/312 [56:03<1:32:10, 28.51s/it]
/media/songoh/ssh2/song_ws/T3DIS_backup/MaskDNtoBBox_GPU0/trainer/trainer.py:524: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').

Testing DataLoader 0:  38%|███▊      | 119/312 [56:14<1:31:13, 28.36s/it]
/media/songoh/ssh2/song_ws/T3DIS_backup/MaskDNtoBBox_GPU0/trainer/trainer.py:524: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').

Testing DataLoader 0:  38%|███▊      | 120/312 [56:31<1:30:26, 28.26s/it]
/media/songoh/ssh2/song_ws/T3DIS_backup/MaskDNtoBBox_GPU0/trainer/trainer.py:524: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').

Testing DataLoader 0:  39%|███▉      | 121/312 [56:42<1:29:31, 28.12s/it]
/media/songoh/ssh2/song_ws/T3DIS_backup/MaskDNtoBBox_GPU0/trainer/trainer.py:524: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').

Testing DataLoader 0:  39%|███▉      | 122/312 [57:20<1:29:18, 28.20s/it]
/media/songoh/ssh2/song_ws/T3DIS_backup/MaskDNtoBBox_GPU0/trainer/trainer.py:524: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').

Testing DataLoader 0:  39%|███▉      | 123/312 [57:47<1:28:47, 28.19s/it]
/media/songoh/ssh2/song_ws/T3DIS_backup/MaskDNtoBBox_GPU0/trainer/trainer.py:524: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').

Testing DataLoader 0:  40%|███▉      | 124/312 [58:07<1:28:07, 28.12s/it]
/media/songoh/ssh2/song_ws/T3DIS_backup/MaskDNtoBBox_GPU0/trainer/trainer.py:524: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').

Testing DataLoader 0:  40%|████      | 125/312 [58:22<1:27:20, 28.02s/it]
/media/songoh/ssh2/song_ws/T3DIS_backup/MaskDNtoBBox_GPU0/trainer/trainer.py:524: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').

Testing DataLoader 0:  40%|████      | 126/312 [58:39<1:26:34, 27.93s/it]
/media/songoh/ssh2/song_ws/T3DIS_backup/MaskDNtoBBox_GPU0/trainer/trainer.py:524: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').

Testing DataLoader 0:  41%|████      | 127/312 [59:01<1:25:58, 27.89s/it]
/media/songoh/ssh2/song_ws/T3DIS_backup/MaskDNtoBBox_GPU0/trainer/trainer.py:524: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').

Testing DataLoader 0:  41%|████      | 128/312 [59:25<1:25:25, 27.86s/it]
/media/songoh/ssh2/song_ws/T3DIS_backup/MaskDNtoBBox_GPU0/trainer/trainer.py:524: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').

Testing DataLoader 0:  41%|████▏     | 129/312 [59:40<1:24:39, 27.76s/it]
/media/songoh/ssh2/song_ws/T3DIS_backup/MaskDNtoBBox_GPU0/trainer/trainer.py:524: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').

Testing DataLoader 0:  42%|████▏     | 130/312 [1:00:00<1:24:00, 27.69s/it]
/media/songoh/ssh2/song_ws/T3DIS_backup/MaskDNtoBBox_GPU0/trainer/trainer.py:524: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').

Testing DataLoader 0:  42%|████▏     | 131/312 [1:00:17<1:23:17, 27.61s/it]
/media/songoh/ssh2/song_ws/T3DIS_backup/MaskDNtoBBox_GPU0/trainer/trainer.py:524: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').

Testing DataLoader 0:  42%|████▏     | 132/312 [1:00:38<1:22:41, 27.56s/it]
/media/songoh/ssh2/song_ws/T3DIS_backup/MaskDNtoBBox_GPU0/trainer/trainer.py:524: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').

Testing DataLoader 0:  43%|████▎     | 133/312 [1:00:43<1:21:43, 27.39s/it]
/media/songoh/ssh2/song_ws/T3DIS_backup/MaskDNtoBBox_GPU0/trainer/trainer.py:524: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').

Testing DataLoader 0:  43%|████▎     | 134/312 [1:00:48<1:20:46, 27.23s/it]
/media/songoh/ssh2/song_ws/T3DIS_backup/MaskDNtoBBox_GPU0/trainer/trainer.py:524: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').

Testing DataLoader 0:  43%|████▎     | 135/312 [1:00:53<1:19:49, 27.06s/it]
/media/songoh/ssh2/song_ws/T3DIS_backup/MaskDNtoBBox_GPU0/trainer/trainer.py:524: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').

Testing DataLoader 0:  44%|████▎     | 136/312 [1:01:08<1:19:07, 26.98s/it]
/media/songoh/ssh2/song_ws/T3DIS_backup/MaskDNtoBBox_GPU0/trainer/trainer.py:524: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').

Testing DataLoader 0:  44%|████▍     | 137/312 [1:01:24<1:18:27, 26.90s/it]
/media/songoh/ssh2/song_ws/T3DIS_backup/MaskDNtoBBox_GPU0/trainer/trainer.py:524: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').

Testing DataLoader 0:  44%|████▍     | 138/312 [1:01:48<1:17:55, 26.87s/it]
/media/songoh/ssh2/song_ws/T3DIS_backup/MaskDNtoBBox_GPU0/trainer/trainer.py:524: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').

Testing DataLoader 0:  45%|████▍     | 139/312 [1:02:40<1:18:00, 27.05s/it]
/media/songoh/ssh2/song_ws/T3DIS_backup/MaskDNtoBBox_GPU0/trainer/trainer.py:524: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').

Testing DataLoader 0:  45%|████▍     | 140/312 [1:02:54<1:17:17, 26.96s/it]
/media/songoh/ssh2/song_ws/T3DIS_backup/MaskDNtoBBox_GPU0/trainer/trainer.py:524: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').

Testing DataLoader 0:  45%|████▌     | 141/312 [1:03:29<1:16:59, 27.02s/it]
/media/songoh/ssh2/song_ws/T3DIS_backup/MaskDNtoBBox_GPU0/trainer/trainer.py:524: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').

Testing DataLoader 0:  46%|████▌     | 142/312 [1:03:41<1:16:14, 26.91s/it]
/media/songoh/ssh2/song_ws/T3DIS_backup/MaskDNtoBBox_GPU0/trainer/trainer.py:524: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').

Testing DataLoader 0:  46%|████▌     | 143/312 [1:03:52<1:15:29, 26.80s/it]
/media/songoh/ssh2/song_ws/T3DIS_backup/MaskDNtoBBox_GPU0/trainer/trainer.py:524: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').

Testing DataLoader 0:  46%|████▌     | 144/312 [1:04:01<1:14:41, 26.68s/it]
/media/songoh/ssh2/song_ws/T3DIS_backup/MaskDNtoBBox_GPU0/trainer/trainer.py:524: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').

Testing DataLoader 0:  46%|████▋     | 145/312 [1:04:11<1:13:55, 26.56s/it]
/media/songoh/ssh2/song_ws/T3DIS_backup/MaskDNtoBBox_GPU0/trainer/trainer.py:524: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').

Testing DataLoader 0:  47%|████▋     | 146/312 [1:04:18<1:13:07, 26.43s/it]
/media/songoh/ssh2/song_ws/T3DIS_backup/MaskDNtoBBox_GPU0/trainer/trainer.py:524: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').

Testing DataLoader 0:  47%|████▋     | 147/312 [1:04:46<1:12:42, 26.44s/it]
/media/songoh/ssh2/song_ws/T3DIS_backup/MaskDNtoBBox_GPU0/trainer/trainer.py:524: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').

Testing DataLoader 0:  47%|████▋     | 148/312 [1:05:06<1:12:09, 26.40s/it]
/media/songoh/ssh2/song_ws/T3DIS_backup/MaskDNtoBBox_GPU0/trainer/trainer.py:524: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').

Testing DataLoader 0:  48%|████▊     | 149/312 [1:05:28<1:11:37, 26.37s/it]
/media/songoh/ssh2/song_ws/T3DIS_backup/MaskDNtoBBox_GPU0/trainer/trainer.py:524: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').

Testing DataLoader 0:  48%|████▊     | 150/312 [1:05:46<1:11:02, 26.31s/it]
/media/songoh/ssh2/song_ws/T3DIS_backup/MaskDNtoBBox_GPU0/trainer/trainer.py:524: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').

Testing DataLoader 0:  48%|████▊     | 151/312 [1:06:05<1:10:27, 26.26s/it]
/media/songoh/ssh2/song_ws/T3DIS_backup/MaskDNtoBBox_GPU0/trainer/trainer.py:524: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').

Testing DataLoader 0:  49%|████▊     | 152/312 [1:06:25<1:09:55, 26.22s/it]
/media/songoh/ssh2/song_ws/T3DIS_backup/MaskDNtoBBox_GPU0/trainer/trainer.py:524: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').

Testing DataLoader 0:  49%|████▉     | 153/312 [1:06:44<1:09:21, 26.17s/it]
/media/songoh/ssh2/song_ws/T3DIS_backup/MaskDNtoBBox_GPU0/trainer/trainer.py:524: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').

Testing DataLoader 0:  49%|████▉     | 154/312 [1:07:04<1:08:48, 26.13s/it]
/media/songoh/ssh2/song_ws/T3DIS_backup/MaskDNtoBBox_GPU0/trainer/trainer.py:524: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').

Testing DataLoader 0:  50%|████▉     | 155/312 [1:07:19<1:08:11, 26.06s/it]
/media/songoh/ssh2/song_ws/T3DIS_backup/MaskDNtoBBox_GPU0/trainer/trainer.py:524: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').

Testing DataLoader 0:  50%|█████     | 156/312 [1:07:28<1:07:28, 25.95s/it]
/media/songoh/ssh2/song_ws/T3DIS_backup/MaskDNtoBBox_GPU0/trainer/trainer.py:524: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').

Testing DataLoader 0:  50%|█████     | 157/312 [1:07:39<1:06:47, 25.85s/it]
/media/songoh/ssh2/song_ws/T3DIS_backup/MaskDNtoBBox_GPU0/trainer/trainer.py:524: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').

Testing DataLoader 0:  51%|█████     | 158/312 [1:07:58<1:06:14, 25.81s/it]
/media/songoh/ssh2/song_ws/T3DIS_backup/MaskDNtoBBox_GPU0/trainer/trainer.py:524: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').


Testing DataLoader 0:  51%|█████▏    | 160/312 [1:09:45<1:06:16, 26.16s/it]
/media/songoh/ssh2/song_ws/T3DIS_backup/MaskDNtoBBox_GPU0/trainer/trainer.py:524: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').

Testing DataLoader 0:  52%|█████▏    | 161/312 [1:10:01<1:05:40, 26.10s/it]
/media/songoh/ssh2/song_ws/T3DIS_backup/MaskDNtoBBox_GPU0/trainer/trainer.py:524: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  topk_indices = topk_indices // num_classes
/media/songoh/ssh2/song_ws/T3DIS_backup/MaskDNtoBBox_GPU0/trainer/trainer.py:524: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').

Testing DataLoader 0:  52%|█████▏    | 162/312 [1:10:30<1:05:17, 26.12s/it]
/media/songoh/ssh2/song_ws/T3DIS_backup/MaskDNtoBBox_GPU0/trainer/trainer.py:524: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').

Testing DataLoader 0:  52%|█████▏    | 163/312 [1:10:54<1:04:48, 26.10s/it]
/media/songoh/ssh2/song_ws/T3DIS_backup/MaskDNtoBBox_GPU0/trainer/trainer.py:524: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').

Testing DataLoader 0:  53%|█████▎    | 164/312 [1:11:12<1:04:16, 26.05s/it]
/media/songoh/ssh2/song_ws/T3DIS_backup/MaskDNtoBBox_GPU0/trainer/trainer.py:524: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').

Testing DataLoader 0:  53%|█████▎    | 165/312 [1:11:26<1:03:39, 25.98s/it]
/media/songoh/ssh2/song_ws/T3DIS_backup/MaskDNtoBBox_GPU0/trainer/trainer.py:524: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').

Testing DataLoader 0:  53%|█████▎    | 166/312 [1:11:54<1:03:15, 25.99s/it]
/media/songoh/ssh2/song_ws/T3DIS_backup/MaskDNtoBBox_GPU0/trainer/trainer.py:524: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').

Testing DataLoader 0:  54%|█████▎    | 167/312 [1:12:32<1:02:59, 26.07s/it]
/media/songoh/ssh2/song_ws/T3DIS_backup/MaskDNtoBBox_GPU0/trainer/trainer.py:524: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').

Testing DataLoader 0:  54%|█████▍    | 168/312 [1:12:57<1:02:32, 26.06s/it]
/media/songoh/ssh2/song_ws/T3DIS_backup/MaskDNtoBBox_GPU0/trainer/trainer.py:524: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').

Testing DataLoader 0:  54%|█████▍    | 169/312 [1:13:15<1:01:58, 26.01s/it]
/media/songoh/ssh2/song_ws/T3DIS_backup/MaskDNtoBBox_GPU0/trainer/trainer.py:524: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').

Testing DataLoader 0:  54%|█████▍    | 170/312 [1:13:40<1:01:32, 26.00s/it]
/media/songoh/ssh2/song_ws/T3DIS_backup/MaskDNtoBBox_GPU0/trainer/trainer.py:524: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').

Testing DataLoader 0:  55%|█████▍    | 171/312 [1:14:24<1:01:21, 26.11s/it]
/media/songoh/ssh2/song_ws/T3DIS_backup/MaskDNtoBBox_GPU0/trainer/trainer.py:524: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').

Testing DataLoader 0:  55%|█████▌    | 172/312 [1:14:56<1:00:59, 26.14s/it]
/media/songoh/ssh2/song_ws/T3DIS_backup/MaskDNtoBBox_GPU0/trainer/trainer.py:524: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').

Testing DataLoader 0:  55%|█████▌    | 173/312 [1:15:34<1:00:43, 26.21s/it]
/media/songoh/ssh2/song_ws/T3DIS_backup/MaskDNtoBBox_GPU0/trainer/trainer.py:524: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').

Testing DataLoader 0:  56%|█████▌    | 174/312 [1:15:42<1:00:03, 26.11s/it]
/media/songoh/ssh2/song_ws/T3DIS_backup/MaskDNtoBBox_GPU0/trainer/trainer.py:524: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').

Testing DataLoader 0:  56%|█████▌    | 175/312 [1:15:56<59:27, 26.04s/it]
/media/songoh/ssh2/song_ws/T3DIS_backup/MaskDNtoBBox_GPU0/trainer/trainer.py:524: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').

Testing DataLoader 0:  56%|█████▋    | 176/312 [1:16:45<59:19, 26.17s/it]
/media/songoh/ssh2/song_ws/T3DIS_backup/MaskDNtoBBox_GPU0/trainer/trainer.py:524: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').

Testing DataLoader 0:  57%|█████▋    | 177/312 [1:17:33<59:09, 26.29s/it]
/media/songoh/ssh2/song_ws/T3DIS_backup/MaskDNtoBBox_GPU0/trainer/trainer.py:524: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').

Testing DataLoader 0:  57%|█████▋    | 178/312 [1:17:58<58:41, 26.28s/it]
/media/songoh/ssh2/song_ws/T3DIS_backup/MaskDNtoBBox_GPU0/trainer/trainer.py:524: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').

Testing DataLoader 0:  57%|█████▋    | 179/312 [1:18:24<58:15, 26.28s/it]
/media/songoh/ssh2/song_ws/T3DIS_backup/MaskDNtoBBox_GPU0/trainer/trainer.py:524: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').


Testing DataLoader 0:  58%|█████▊    | 181/312 [1:18:49<57:02, 26.13s/it]
/media/songoh/ssh2/song_ws/T3DIS_backup/MaskDNtoBBox_GPU0/trainer/trainer.py:524: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  topk_indices = topk_indices // num_classes
/media/songoh/ssh2/song_ws/T3DIS_backup/MaskDNtoBBox_GPU0/trainer/trainer.py:524: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').


Testing DataLoader 0:  59%|█████▊    | 183/312 [1:19:00<55:41, 25.90s/it]
/media/songoh/ssh2/song_ws/T3DIS_backup/MaskDNtoBBox_GPU0/trainer/trainer.py:524: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  topk_indices = topk_indices // num_classes
/media/songoh/ssh2/song_ws/T3DIS_backup/MaskDNtoBBox_GPU0/trainer/trainer.py:524: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').

Testing DataLoader 0:  59%|█████▉    | 184/312 [1:19:14<55:07, 25.84s/it]
/media/songoh/ssh2/song_ws/T3DIS_backup/MaskDNtoBBox_GPU0/trainer/trainer.py:524: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').

Testing DataLoader 0:  59%|█████▉    | 185/312 [1:19:42<54:43, 25.85s/it]
/media/songoh/ssh2/song_ws/T3DIS_backup/MaskDNtoBBox_GPU0/trainer/trainer.py:524: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').


Testing DataLoader 0:  60%|█████▉    | 187/312 [1:20:50<54:02, 25.94s/it]
/media/songoh/ssh2/song_ws/T3DIS_backup/MaskDNtoBBox_GPU0/trainer/trainer.py:524: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  topk_indices = topk_indices // num_classes
/media/songoh/ssh2/song_ws/T3DIS_backup/MaskDNtoBBox_GPU0/trainer/trainer.py:524: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').

Testing DataLoader 0:  60%|██████    | 188/312 [1:21:09<53:31, 25.90s/it]
/media/songoh/ssh2/song_ws/T3DIS_backup/MaskDNtoBBox_GPU0/trainer/trainer.py:524: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').

Testing DataLoader 0:  61%|██████    | 189/312 [1:21:36<53:06, 25.91s/it]
/media/songoh/ssh2/song_ws/T3DIS_backup/MaskDNtoBBox_GPU0/trainer/trainer.py:524: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').

Testing DataLoader 0:  61%|██████    | 190/312 [1:21:53<52:35, 25.86s/it]
/media/songoh/ssh2/song_ws/T3DIS_backup/MaskDNtoBBox_GPU0/trainer/trainer.py:524: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').

Testing DataLoader 0:  61%|██████    | 191/312 [1:22:14<52:06, 25.84s/it]
/media/songoh/ssh2/song_ws/T3DIS_backup/MaskDNtoBBox_GPU0/trainer/trainer.py:524: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').

Testing DataLoader 0:  62%|██████▏   | 192/312 [1:22:35<51:37, 25.81s/it]
/media/songoh/ssh2/song_ws/T3DIS_backup/MaskDNtoBBox_GPU0/trainer/trainer.py:524: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').


Testing DataLoader 0:  62%|██████▏   | 194/312 [1:23:01<50:30, 25.68s/it]
/media/songoh/ssh2/song_ws/T3DIS_backup/MaskDNtoBBox_GPU0/trainer/trainer.py:524: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  topk_indices = topk_indices // num_classes
/media/songoh/ssh2/song_ws/T3DIS_backup/MaskDNtoBBox_GPU0/trainer/trainer.py:524: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').

Testing DataLoader 0:  62%|██████▎   | 195/312 [1:23:09<49:53, 25.59s/it]
/media/songoh/ssh2/song_ws/T3DIS_backup/MaskDNtoBBox_GPU0/trainer/trainer.py:524: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').

Testing DataLoader 0:  63%|██████▎   | 196/312 [1:23:16<49:17, 25.49s/it]
/media/songoh/ssh2/song_ws/T3DIS_backup/MaskDNtoBBox_GPU0/trainer/trainer.py:524: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').


Testing DataLoader 0:  63%|██████▎   | 198/312 [1:24:03<48:24, 25.47s/it]
/media/songoh/ssh2/song_ws/T3DIS_backup/MaskDNtoBBox_GPU0/trainer/trainer.py:524: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').

Testing DataLoader 0:  64%|██████▍   | 199/312 [1:24:27<47:57, 25.47s/it]
/media/songoh/ssh2/song_ws/T3DIS_backup/MaskDNtoBBox_GPU0/trainer/trainer.py:524: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  topk_indices = topk_indices // num_classes
/media/songoh/ssh2/song_ws/T3DIS_backup/MaskDNtoBBox_GPU0/trainer/trainer.py:524: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').


Testing DataLoader 0:  64%|██████▍   | 201/312 [1:24:53<46:53, 25.34s/it]
/media/songoh/ssh2/song_ws/T3DIS_backup/MaskDNtoBBox_GPU0/trainer/trainer.py:524: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').

Testing DataLoader 0:  65%|██████▍   | 202/312 [1:25:04<46:19, 25.27s/it]
/media/songoh/ssh2/song_ws/T3DIS_backup/MaskDNtoBBox_GPU0/trainer/trainer.py:524: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').

Testing DataLoader 0:  65%|██████▌   | 203/312 [1:25:20<45:49, 25.22s/it]
/media/songoh/ssh2/song_ws/T3DIS_backup/MaskDNtoBBox_GPU0/trainer/trainer.py:524: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').

Testing DataLoader 0:  65%|██████▌   | 204/312 [1:25:39<45:20, 25.19s/it]
/media/songoh/ssh2/song_ws/T3DIS_backup/MaskDNtoBBox_GPU0/trainer/trainer.py:524: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').

Testing DataLoader 0:  66%|██████▌   | 205/312 [1:25:52<44:49, 25.14s/it]
/media/songoh/ssh2/song_ws/T3DIS_backup/MaskDNtoBBox_GPU0/trainer/trainer.py:524: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').

Testing DataLoader 0:  66%|██████▌   | 206/312 [1:26:06<44:18, 25.08s/it]
/media/songoh/ssh2/song_ws/T3DIS_backup/MaskDNtoBBox_GPU0/trainer/trainer.py:524: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').

Testing DataLoader 0:  66%|██████▋   | 207/312 [1:26:19<43:47, 25.02s/it]
/media/songoh/ssh2/song_ws/T3DIS_backup/MaskDNtoBBox_GPU0/trainer/trainer.py:524: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').

Testing DataLoader 0:  67%|██████▋   | 208/312 [1:26:50<43:25, 25.05s/it]
/media/songoh/ssh2/song_ws/T3DIS_backup/MaskDNtoBBox_GPU0/trainer/trainer.py:524: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  topk_indices = topk_indices // num_classes
/media/songoh/ssh2/song_ws/T3DIS_backup/MaskDNtoBBox_GPU0/trainer/trainer.py:524: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').

Testing DataLoader 0:  67%|██████▋   | 209/312 [1:27:16<43:00, 25.05s/it]
/media/songoh/ssh2/song_ws/T3DIS_backup/MaskDNtoBBox_GPU0/trainer/trainer.py:524: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').

Testing DataLoader 0:  67%|██████▋   | 210/312 [1:27:39<42:34, 25.04s/it]
/media/songoh/ssh2/song_ws/T3DIS_backup/MaskDNtoBBox_GPU0/trainer/trainer.py:524: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').

Testing DataLoader 0:  68%|██████▊   | 211/312 [1:29:45<42:57, 25.52s/it]
/media/songoh/ssh2/song_ws/T3DIS_backup/MaskDNtoBBox_GPU0/trainer/trainer.py:524: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').

Testing DataLoader 0:  68%|██████▊   | 212/312 [1:31:56<43:22, 26.02s/it]
/media/songoh/ssh2/song_ws/T3DIS_backup/MaskDNtoBBox_GPU0/trainer/trainer.py:524: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').

Testing DataLoader 0:  68%|██████▊   | 213/312 [1:32:57<43:12, 26.19s/it]
/media/songoh/ssh2/song_ws/T3DIS_backup/MaskDNtoBBox_GPU0/trainer/trainer.py:524: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').

Testing DataLoader 0:  69%|██████▊   | 214/312 [1:34:04<43:04, 26.37s/it]
/media/songoh/ssh2/song_ws/T3DIS_backup/MaskDNtoBBox_GPU0/trainer/trainer.py:524: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').

Testing DataLoader 0:  69%|██████▉   | 215/312 [1:34:19<42:33, 26.32s/it]
/media/songoh/ssh2/song_ws/T3DIS_backup/MaskDNtoBBox_GPU0/trainer/trainer.py:524: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').

Testing DataLoader 0:  69%|██████▉   | 216/312 [1:34:37<42:03, 26.28s/it]
/media/songoh/ssh2/song_ws/T3DIS_backup/MaskDNtoBBox_GPU0/trainer/trainer.py:524: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').

Testing DataLoader 0:  70%|██████▉   | 217/312 [1:34:49<41:30, 26.22s/it]
/media/songoh/ssh2/song_ws/T3DIS_backup/MaskDNtoBBox_GPU0/trainer/trainer.py:524: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').

Testing DataLoader 0:  70%|██████▉   | 218/312 [1:35:02<40:58, 26.16s/it]
/media/songoh/ssh2/song_ws/T3DIS_backup/MaskDNtoBBox_GPU0/trainer/trainer.py:524: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').

Testing DataLoader 0:  70%|███████   | 219/312 [1:35:13<40:26, 26.09s/it]
/media/songoh/ssh2/song_ws/T3DIS_backup/MaskDNtoBBox_GPU0/trainer/trainer.py:524: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').

Testing DataLoader 0:  71%|███████   | 220/312 [1:35:28<39:55, 26.04s/it]
/media/songoh/ssh2/song_ws/T3DIS_backup/MaskDNtoBBox_GPU0/trainer/trainer.py:524: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').


Testing DataLoader 0:  71%|███████   | 222/312 [1:36:03<38:56, 25.96s/it]
/media/songoh/ssh2/song_ws/T3DIS_backup/MaskDNtoBBox_GPU0/trainer/trainer.py:524: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  topk_indices = topk_indices // num_classes
/media/songoh/ssh2/song_ws/T3DIS_backup/MaskDNtoBBox_GPU0/trainer/trainer.py:524: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').


Testing DataLoader 0:  72%|███████▏  | 224/312 [1:37:54<38:27, 26.23s/it]
/media/songoh/ssh2/song_ws/T3DIS_backup/MaskDNtoBBox_GPU0/trainer/trainer.py:524: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').

Testing DataLoader 0:  72%|███████▏  | 225/312 [1:38:22<38:02, 26.24s/it]
/media/songoh/ssh2/song_ws/T3DIS_backup/MaskDNtoBBox_GPU0/trainer/trainer.py:524: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  topk_indices = topk_indices // num_classes
/media/songoh/ssh2/song_ws/T3DIS_backup/MaskDNtoBBox_GPU0/trainer/trainer.py:647: RuntimeWarning: invalid value encountered in divide

Testing DataLoader 0:  72%|███████▏  | 226/312 [1:38:47<37:35, 26.23s/it]
/media/songoh/ssh2/song_ws/T3DIS_backup/MaskDNtoBBox_GPU0/trainer/trainer.py:524: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').

Testing DataLoader 0:  73%|███████▎  | 227/312 [1:39:35<37:17, 26.32s/it]
/media/songoh/ssh2/song_ws/T3DIS_backup/MaskDNtoBBox_GPU0/trainer/trainer.py:524: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').

Testing DataLoader 0:  73%|███████▎  | 228/312 [1:39:52<36:47, 26.28s/it]
/media/songoh/ssh2/song_ws/T3DIS_backup/MaskDNtoBBox_GPU0/trainer/trainer.py:524: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').

Testing DataLoader 0:  73%|███████▎  | 229/312 [1:40:49<36:32, 26.42s/it]
/media/songoh/ssh2/song_ws/T3DIS_backup/MaskDNtoBBox_GPU0/trainer/trainer.py:524: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  topk_indices = topk_indices // num_classes
/media/songoh/ssh2/song_ws/T3DIS_backup/MaskDNtoBBox_GPU0/trainer/trainer.py:524: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').

Testing DataLoader 0:  74%|███████▎  | 230/312 [1:41:12<36:04, 26.40s/it]
/media/songoh/ssh2/song_ws/T3DIS_backup/MaskDNtoBBox_GPU0/trainer/trainer.py:524: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').

Testing DataLoader 0:  74%|███████▍  | 231/312 [1:41:23<35:33, 26.34s/it]
/media/songoh/ssh2/song_ws/T3DIS_backup/MaskDNtoBBox_GPU0/trainer/trainer.py:524: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').

Testing DataLoader 0:  74%|███████▍  | 232/312 [1:42:14<35:15, 26.44s/it]
/media/songoh/ssh2/song_ws/T3DIS_backup/MaskDNtoBBox_GPU0/trainer/trainer.py:524: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  topk_indices = topk_indices // num_classes
/media/songoh/ssh2/song_ws/T3DIS_backup/MaskDNtoBBox_GPU0/trainer/trainer.py:647: RuntimeWarning: invalid value encountered in divide

Testing DataLoader 0:  75%|███████▍  | 233/312 [1:43:01<34:55, 26.53s/it]
/media/songoh/ssh2/song_ws/T3DIS_backup/MaskDNtoBBox_GPU0/trainer/trainer.py:524: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').

Testing DataLoader 0:  75%|███████▌  | 234/312 [1:43:29<34:29, 26.53s/it]
/media/songoh/ssh2/song_ws/T3DIS_backup/MaskDNtoBBox_GPU0/trainer/trainer.py:524: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').

Testing DataLoader 0:  75%|███████▌  | 235/312 [1:44:02<34:05, 26.56s/it]
/media/songoh/ssh2/song_ws/T3DIS_backup/MaskDNtoBBox_GPU0/trainer/trainer.py:524: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').

Testing DataLoader 0:  76%|███████▌  | 236/312 [1:45:02<33:49, 26.70s/it]
/media/songoh/ssh2/song_ws/T3DIS_backup/MaskDNtoBBox_GPU0/trainer/trainer.py:524: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').

Testing DataLoader 0:  76%|███████▌  | 237/312 [1:46:09<33:35, 26.88s/it]
/media/songoh/ssh2/song_ws/T3DIS_backup/MaskDNtoBBox_GPU0/trainer/trainer.py:524: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').

Testing DataLoader 0:  76%|███████▋  | 238/312 [1:47:11<33:19, 27.02s/it]
/media/songoh/ssh2/song_ws/T3DIS_backup/MaskDNtoBBox_GPU0/trainer/trainer.py:524: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').

Testing DataLoader 0:  77%|███████▋  | 239/312 [1:47:41<32:53, 27.03s/it]
/media/songoh/ssh2/song_ws/T3DIS_backup/MaskDNtoBBox_GPU0/trainer/trainer.py:524: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').

Testing DataLoader 0:  77%|███████▋  | 240/312 [1:48:02<32:24, 27.01s/it]
/media/songoh/ssh2/song_ws/T3DIS_backup/MaskDNtoBBox_GPU0/trainer/trainer.py:524: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').

Testing DataLoader 0:  77%|███████▋  | 241/312 [1:48:19<31:54, 26.97s/it]
/media/songoh/ssh2/song_ws/T3DIS_backup/MaskDNtoBBox_GPU0/trainer/trainer.py:524: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').

Testing DataLoader 0:  78%|███████▊  | 242/312 [1:48:53<31:29, 27.00s/it]
/media/songoh/ssh2/song_ws/T3DIS_backup/MaskDNtoBBox_GPU0/trainer/trainer.py:524: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').

Testing DataLoader 0:  78%|███████▊  | 243/312 [1:49:15<31:01, 26.98s/it]
/media/songoh/ssh2/song_ws/T3DIS_backup/MaskDNtoBBox_GPU0/trainer/trainer.py:524: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').

Testing DataLoader 0:  78%|███████▊  | 244/312 [1:49:39<30:33, 26.96s/it]
/media/songoh/ssh2/song_ws/T3DIS_backup/MaskDNtoBBox_GPU0/trainer/trainer.py:524: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').


Testing DataLoader 0:  79%|███████▉  | 246/312 [1:50:51<29:44, 27.04s/it]
/media/songoh/ssh2/song_ws/T3DIS_backup/MaskDNtoBBox_GPU0/trainer/trainer.py:524: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  topk_indices = topk_indices // num_classes
/media/songoh/ssh2/song_ws/T3DIS_backup/MaskDNtoBBox_GPU0/trainer/trainer.py:524: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').

Testing DataLoader 0:  79%|███████▉  | 247/312 [1:51:26<29:19, 27.07s/it]
/media/songoh/ssh2/song_ws/T3DIS_backup/MaskDNtoBBox_GPU0/trainer/trainer.py:524: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').

Testing DataLoader 0:  79%|███████▉  | 248/312 [1:51:46<28:50, 27.04s/it]
/media/songoh/ssh2/song_ws/T3DIS_backup/MaskDNtoBBox_GPU0/trainer/trainer.py:524: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').

Testing DataLoader 0:  80%|███████▉  | 249/312 [1:52:06<28:21, 27.01s/it]
/media/songoh/ssh2/song_ws/T3DIS_backup/MaskDNtoBBox_GPU0/trainer/trainer.py:524: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').

Testing DataLoader 0:  80%|████████  | 250/312 [1:52:16<27:50, 26.95s/it]
/media/songoh/ssh2/song_ws/T3DIS_backup/MaskDNtoBBox_GPU0/trainer/trainer.py:524: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').

Testing DataLoader 0:  80%|████████  | 251/312 [1:52:27<27:19, 26.88s/it]
/media/songoh/ssh2/song_ws/T3DIS_backup/MaskDNtoBBox_GPU0/trainer/trainer.py:524: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').

Testing DataLoader 0:  81%|████████  | 252/312 [1:52:42<26:50, 26.84s/it]
/media/songoh/ssh2/song_ws/T3DIS_backup/MaskDNtoBBox_GPU0/trainer/trainer.py:524: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').


Testing DataLoader 0:  81%|████████▏ | 254/312 [1:53:10<25:50, 26.73s/it]
/media/songoh/ssh2/song_ws/T3DIS_backup/MaskDNtoBBox_GPU0/trainer/trainer.py:524: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  topk_indices = topk_indices // num_classes
/media/songoh/ssh2/song_ws/T3DIS_backup/MaskDNtoBBox_GPU0/trainer/trainer.py:647: RuntimeWarning: invalid value encountered in divide
  norm_overlaps = pairwise_overlap / normalization
/media/songoh/ssh2/song_ws/T3DIS_backup/MaskDNtoBBox_GPU0/trainer/trainer.py:524: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').

Testing DataLoader 0:  82%|████████▏ | 255/312 [1:53:29<25:22, 26.71s/it]
/media/songoh/ssh2/song_ws/T3DIS_backup/MaskDNtoBBox_GPU0/trainer/trainer.py:524: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').

Testing DataLoader 0:  82%|████████▏ | 256/312 [1:53:51<24:54, 26.68s/it]
/media/songoh/ssh2/song_ws/T3DIS_backup/MaskDNtoBBox_GPU0/trainer/trainer.py:524: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').


Testing DataLoader 0:  83%|████████▎ | 258/312 [1:54:42<24:00, 26.68s/it]
/media/songoh/ssh2/song_ws/T3DIS_backup/MaskDNtoBBox_GPU0/trainer/trainer.py:524: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  topk_indices = topk_indices // num_classes
/media/songoh/ssh2/song_ws/T3DIS_backup/MaskDNtoBBox_GPU0/trainer/trainer.py:524: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').


Testing DataLoader 0:  83%|████████▎ | 260/312 [1:55:52<23:10, 26.74s/it]
/media/songoh/ssh2/song_ws/T3DIS_backup/MaskDNtoBBox_GPU0/trainer/trainer.py:524: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').

Testing DataLoader 0:  84%|████████▎ | 261/312 [1:56:18<22:43, 26.74s/it]
/media/songoh/ssh2/song_ws/T3DIS_backup/MaskDNtoBBox_GPU0/trainer/trainer.py:524: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').

Testing DataLoader 0:  84%|████████▍ | 262/312 [1:56:45<22:16, 26.74s/it]
/media/songoh/ssh2/song_ws/T3DIS_backup/MaskDNtoBBox_GPU0/trainer/trainer.py:524: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').

Testing DataLoader 0:  84%|████████▍ | 263/312 [1:56:50<21:46, 26.65s/it]
/media/songoh/ssh2/song_ws/T3DIS_backup/MaskDNtoBBox_GPU0/trainer/trainer.py:524: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').

Testing DataLoader 0:  85%|████████▍ | 264/312 [1:56:55<21:15, 26.58s/it]
/media/songoh/ssh2/song_ws/T3DIS_backup/MaskDNtoBBox_GPU0/trainer/trainer.py:524: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').

Testing DataLoader 0:  85%|████████▍ | 265/312 [1:57:01<20:45, 26.50s/it]
/media/songoh/ssh2/song_ws/T3DIS_backup/MaskDNtoBBox_GPU0/trainer/trainer.py:524: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').

Testing DataLoader 0:  85%|████████▌ | 266/312 [1:57:06<20:15, 26.42s/it]
/media/songoh/ssh2/song_ws/T3DIS_backup/MaskDNtoBBox_GPU0/trainer/trainer.py:524: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  topk_indices = topk_indices // num_classes
/media/songoh/ssh2/song_ws/T3DIS_backup/MaskDNtoBBox_GPU0/trainer/trainer.py:524: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').

Testing DataLoader 0:  86%|████████▌ | 267/312 [1:57:51<19:51, 26.49s/it]
/media/songoh/ssh2/song_ws/T3DIS_backup/MaskDNtoBBox_GPU0/trainer/trainer.py:524: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').

Testing DataLoader 0:  86%|████████▌ | 268/312 [1:58:16<19:25, 26.48s/it]
/media/songoh/ssh2/song_ws/T3DIS_backup/MaskDNtoBBox_GPU0/trainer/trainer.py:524: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').


Testing DataLoader 0:  87%|████████▋ | 270/312 [1:58:56<18:30, 26.43s/it]
/media/songoh/ssh2/song_ws/T3DIS_backup/MaskDNtoBBox_GPU0/trainer/trainer.py:524: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  topk_indices = topk_indices // num_classes
/media/songoh/ssh2/song_ws/T3DIS_backup/MaskDNtoBBox_GPU0/trainer/trainer.py:524: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').

Testing DataLoader 0:  87%|████████▋ | 271/312 [1:59:15<18:02, 26.40s/it]
/media/songoh/ssh2/song_ws/T3DIS_backup/MaskDNtoBBox_GPU0/trainer/trainer.py:524: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').

Testing DataLoader 0:  87%|████████▋ | 272/312 [1:59:24<17:33, 26.34s/it]
/media/songoh/ssh2/song_ws/T3DIS_backup/MaskDNtoBBox_GPU0/trainer/trainer.py:524: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').

Testing DataLoader 0:  88%|████████▊ | 273/312 [2:00:34<17:13, 26.50s/it]
/media/songoh/ssh2/song_ws/T3DIS_backup/MaskDNtoBBox_GPU0/trainer/trainer.py:524: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  topk_indices = topk_indices // num_classes
/media/songoh/ssh2/song_ws/T3DIS_backup/MaskDNtoBBox_GPU0/trainer/trainer.py:647: RuntimeWarning: invalid value encountered in divide

Testing DataLoader 0:  88%|████████▊ | 274/312 [2:01:37<16:52, 26.63s/it]
/media/songoh/ssh2/song_ws/T3DIS_backup/MaskDNtoBBox_GPU0/trainer/trainer.py:524: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').


Testing DataLoader 0:  88%|████████▊ | 276/312 [2:02:44<16:00, 26.68s/it]
/media/songoh/ssh2/song_ws/T3DIS_backup/MaskDNtoBBox_GPU0/trainer/trainer.py:524: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').

Testing DataLoader 0:  89%|████████▉ | 277/312 [2:02:50<15:31, 26.61s/it]
/media/songoh/ssh2/song_ws/T3DIS_backup/MaskDNtoBBox_GPU0/trainer/trainer.py:524: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').

Testing DataLoader 0:  89%|████████▉ | 278/312 [2:03:17<15:04, 26.61s/it]
/media/songoh/ssh2/song_ws/T3DIS_backup/MaskDNtoBBox_GPU0/trainer/trainer.py:524: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').

Testing DataLoader 0:  89%|████████▉ | 279/312 [2:04:08<14:40, 26.70s/it]
/media/songoh/ssh2/song_ws/T3DIS_backup/MaskDNtoBBox_GPU0/trainer/trainer.py:524: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  topk_indices = topk_indices // num_classes
/media/songoh/ssh2/song_ws/T3DIS_backup/MaskDNtoBBox_GPU0/trainer/trainer.py:524: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').


Testing DataLoader 0:  90%|█████████ | 281/312 [2:05:23<13:49, 26.77s/it]
/media/songoh/ssh2/song_ws/T3DIS_backup/MaskDNtoBBox_GPU0/trainer/trainer.py:524: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').

Testing DataLoader 0:  90%|█████████ | 282/312 [2:05:39<13:22, 26.74s/it]
/media/songoh/ssh2/song_ws/T3DIS_backup/MaskDNtoBBox_GPU0/trainer/trainer.py:524: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').

Testing DataLoader 0:  91%|█████████ | 283/312 [2:05:50<12:53, 26.68s/it]
/media/songoh/ssh2/song_ws/T3DIS_backup/MaskDNtoBBox_GPU0/trainer/trainer.py:524: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').

Testing DataLoader 0:  91%|█████████ | 284/312 [2:06:05<12:25, 26.64s/it]
/media/songoh/ssh2/song_ws/T3DIS_backup/MaskDNtoBBox_GPU0/trainer/trainer.py:524: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').

Testing DataLoader 0:  91%|█████████▏| 285/312 [2:06:29<11:58, 26.63s/it]
/media/songoh/ssh2/song_ws/T3DIS_backup/MaskDNtoBBox_GPU0/trainer/trainer.py:524: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').

Testing DataLoader 0:  92%|█████████▏| 286/312 [2:06:52<11:32, 26.62s/it]
/media/songoh/ssh2/song_ws/T3DIS_backup/MaskDNtoBBox_GPU0/trainer/trainer.py:524: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').

Testing DataLoader 0:  92%|█████████▏| 287/312 [2:06:58<11:03, 26.54s/it]
/media/songoh/ssh2/song_ws/T3DIS_backup/MaskDNtoBBox_GPU0/trainer/trainer.py:524: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').

Testing DataLoader 0:  92%|█████████▏| 288/312 [2:07:04<10:35, 26.47s/it]
/media/songoh/ssh2/song_ws/T3DIS_backup/MaskDNtoBBox_GPU0/trainer/trainer.py:524: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').

Testing DataLoader 0:  93%|█████████▎| 289/312 [2:07:09<10:07, 26.40s/it]
/media/songoh/ssh2/song_ws/T3DIS_backup/MaskDNtoBBox_GPU0/trainer/trainer.py:524: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').

Testing DataLoader 0:  93%|█████████▎| 290/312 [2:07:19<09:39, 26.34s/it]
/media/songoh/ssh2/song_ws/T3DIS_backup/MaskDNtoBBox_GPU0/trainer/trainer.py:524: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').

Testing DataLoader 0:  93%|█████████▎| 291/312 [2:07:35<09:12, 26.31s/it]
/media/songoh/ssh2/song_ws/T3DIS_backup/MaskDNtoBBox_GPU0/trainer/trainer.py:524: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').

Testing DataLoader 0:  94%|█████████▎| 292/312 [2:07:48<08:45, 26.26s/it]
/media/songoh/ssh2/song_ws/T3DIS_backup/MaskDNtoBBox_GPU0/trainer/trainer.py:524: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').

Testing DataLoader 0:  94%|█████████▍| 293/312 [2:08:12<08:18, 26.25s/it]
/media/songoh/ssh2/song_ws/T3DIS_backup/MaskDNtoBBox_GPU0/trainer/trainer.py:524: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').

Testing DataLoader 0:  94%|█████████▍| 294/312 [2:08:55<07:53, 26.31s/it]
/media/songoh/ssh2/song_ws/T3DIS_backup/MaskDNtoBBox_GPU0/trainer/trainer.py:524: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  topk_indices = topk_indices // num_classes
/media/songoh/ssh2/song_ws/T3DIS_backup/MaskDNtoBBox_GPU0/trainer/trainer.py:524: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').

Testing DataLoader 0:  95%|█████████▍| 295/312 [2:09:33<07:27, 26.35s/it]
/media/songoh/ssh2/song_ws/T3DIS_backup/MaskDNtoBBox_GPU0/trainer/trainer.py:524: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').


Testing DataLoader 0:  95%|█████████▌| 297/312 [2:10:30<06:35, 26.37s/it]
/media/songoh/ssh2/song_ws/T3DIS_backup/MaskDNtoBBox_GPU0/trainer/trainer.py:524: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').

Testing DataLoader 0:  96%|█████████▌| 298/312 [2:11:00<06:09, 26.38s/it]
/media/songoh/ssh2/song_ws/T3DIS_backup/MaskDNtoBBox_GPU0/trainer/trainer.py:524: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').

Testing DataLoader 0:  96%|█████████▌| 299/312 [2:11:27<05:42, 26.38s/it]
/media/songoh/ssh2/song_ws/T3DIS_backup/MaskDNtoBBox_GPU0/trainer/trainer.py:524: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').

Testing DataLoader 0:  96%|█████████▌| 300/312 [2:11:53<05:16, 26.38s/it]
/media/songoh/ssh2/song_ws/T3DIS_backup/MaskDNtoBBox_GPU0/trainer/trainer.py:524: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').

Testing DataLoader 0:  96%|█████████▋| 301/312 [2:12:05<04:49, 26.33s/it]
/media/songoh/ssh2/song_ws/T3DIS_backup/MaskDNtoBBox_GPU0/trainer/trainer.py:524: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').

Testing DataLoader 0:  97%|█████████▋| 302/312 [2:12:59<04:24, 26.42s/it]
/media/songoh/ssh2/song_ws/T3DIS_backup/MaskDNtoBBox_GPU0/trainer/trainer.py:524: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').

Testing DataLoader 0:  97%|█████████▋| 303/312 [2:13:31<03:57, 26.44s/it]
/media/songoh/ssh2/song_ws/T3DIS_backup/MaskDNtoBBox_GPU0/trainer/trainer.py:524: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  topk_indices = topk_indices // num_classes
/media/songoh/ssh2/song_ws/T3DIS_backup/MaskDNtoBBox_GPU0/trainer/trainer.py:524: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').


Testing DataLoader 0:  98%|█████████▊| 305/312 [2:14:46<03:05, 26.51s/it]
/media/songoh/ssh2/song_ws/T3DIS_backup/MaskDNtoBBox_GPU0/trainer/trainer.py:524: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  topk_indices = topk_indices // num_classes
/media/songoh/ssh2/song_ws/T3DIS_backup/MaskDNtoBBox_GPU0/trainer/trainer.py:524: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').

Testing DataLoader 0:  98%|█████████▊| 306/312 [2:15:10<02:39, 26.51s/it]
/media/songoh/ssh2/song_ws/T3DIS_backup/MaskDNtoBBox_GPU0/trainer/trainer.py:524: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').

Testing DataLoader 0:  98%|█████████▊| 307/312 [2:16:05<02:12, 26.60s/it]
/media/songoh/ssh2/song_ws/T3DIS_backup/MaskDNtoBBox_GPU0/trainer/trainer.py:524: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').

Testing DataLoader 0:  99%|█████████▊| 308/312 [2:16:10<01:46, 26.53s/it]
/media/songoh/ssh2/song_ws/T3DIS_backup/MaskDNtoBBox_GPU0/trainer/trainer.py:524: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').

Testing DataLoader 0:  99%|█████████▉| 309/312 [2:16:19<01:19, 26.47s/it]
/media/songoh/ssh2/song_ws/T3DIS_backup/MaskDNtoBBox_GPU0/trainer/trainer.py:524: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').


Testing DataLoader 0: 100%|█████████▉| 311/312 [2:16:43<00:26, 26.38s/it]
/media/songoh/ssh2/song_ws/T3DIS_backup/MaskDNtoBBox_GPU0/trainer/trainer.py:524: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
Testing DataLoader 0: 100%|██████████| 312/312 [2:16:59<00:00, 26.34s/it]Computing AP for class:  8
8 0.2826605488354612
Computing AP for class:  7
7 0.40148802190331057
Computing AP for class:  4
4 0.4586598119377362
Computing AP for class:  6
6 0.21514334793498077
Computing AP for class:  11
11 0.04520882525997615
Computing AP for class:  5
5 0.14518552323436346
Computing AP for class:  9
9 0.07329903013224959
Computing AP for class:  16
16 0.3303489346022994
Computing AP for class:  33
33 0.7015707902567254
Computing AP for class:  39
39 0.02678729082899887
Computing AP for class:  14
14 0.09976073183915037
Computing AP for class:  10
10 0.05194805194805195
Computing AP for class:  36
36 0.6241234221598877
Computing AP for class:  34
34 0.4069185102907767
Computing AP for class:  28
28 0.0
Computing AP for class:  3
3 0.05369764496911838
Computing AP for class:  12
12 0.026923076923076925
Computing AP for class:  24
24 0.05116959064327485
Computing AP for class:  8
8 0.37100921969731576
Computing AP for class:  7
7 0.46905199949535215
Computing AP for class:  4
4 0.6130143383710767
Computing AP for class:  6
6 0.26502388722299247
Computing AP for class:  11
11 0.05201220732273186
Computing AP for class:  5
5 0.1640968036346097
Computing AP for class:  9
9 0.1304949458691894
Computing AP for class:  16
16 0.43966991462516997
Computing AP for class:  33
33 0.8459097369692475
Computing AP for class:  39
39 0.02678729082899887
Computing AP for class:  14
14 0.20945710514536647
Computing AP for class:  10
10 0.05194805194805195
Computing AP for class:  36
36 0.6816269284712482
Computing AP for class:  34
34 0.49419247865368576
Computing AP for class:  28
28 0.047619047619047616
Computing AP for class:  3
3 0.06606114903623356
Computing AP for class:  12
12 0.04358974358974359
Computing AP for class:  24
24 0.07309941520467836
evaluating 312 scans...
scans processed: 11
/media/songoh/ssh2/song_ws/T3DIS_backup/MaskDNtoBBox_GPU0/trainer/trainer.py:524: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').




scans processed: 312
################################################################
what           :             AP         AP_50%         AP_25%
################################################################
cabinet        :          0.054          0.071          0.082
bed            :          0.374          0.596          0.639
chair          :          0.142          0.165          0.170
sofa           :          0.164          0.256          0.312
table          :          0.379          0.507          0.589
door           :          0.294          0.399          0.467
window         :          0.091          0.144          0.168
bookshelf      :          0.004          0.026          0.074
picture        :          0.082          0.112          0.122
counter        :          0.009          0.031          0.059
desk           :          0.067          0.120          0.222
curtain        :          0.265          0.392          0.531
refrigerator   :          0.054          0.066          0.088
shower curtain :          0.051          0.179          0.179
toilet         :          0.775          0.866          0.882
sink           :          0.372          0.470          0.624
bathtub        :          0.519          0.644          0.644
otherfurniture :          0.029          0.032          0.032
----------------------------------------------------------------
average        :          0.207          0.282          0.327
Testing DataLoader 0: 100%|██████████| 312/312 [2:17:09<00:00, 26.38s/it]
────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
          Test metric                     DataLoader 0
────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
       val_bathtub_val_ap              0.5191876888275146
     val_bathtub_val_ap_25             0.6436811089515686
     val_bathtub_val_ap_50             0.6436811089515686
   val_bathtub_val_box_ap_25           0.6816269284712482
   val_bathtub_val_box_ap_50           0.6241234221598877
         val_bed_val_ap                0.3739195168018341
       val_bed_val_ap_25               0.638792872428894
       val_bed_val_ap_50               0.5961650609970093
     val_bed_val_box_ap_25             0.6130143383710767
     val_bed_val_box_ap_50             0.4586598119377362
      val_bookshelf_val_ap           0.0043290043249726295
    val_bookshelf_val_ap_25           0.07353123277425766
    val_bookshelf_val_ap_50           0.025974025949835777
  val_bookshelf_val_box_ap_25         0.05194805194805195
  val_bookshelf_val_box_ap_50         0.05194805194805195
       val_cabinet_val_ap             0.053638093173503876
     val_cabinet_val_ap_25            0.08198533952236176
     val_cabinet_val_ap_50            0.07078985124826431
   val_cabinet_val_box_ap_25          0.06606114903623356
   val_cabinet_val_box_ap_50          0.05369764496911838
        val_chair_val_ap               0.1424921602010727
      val_chair_val_ap_25             0.16950900852680206
      val_chair_val_ap_50             0.16450119018554688
    val_chair_val_box_ap_25            0.1640968036346097
    val_chair_val_box_ap_50           0.14518552323436346
       val_counter_val_ap             0.009077705442905426
     val_counter_val_ap_25            0.05882352963089943
     val_counter_val_ap_50            0.03104575164616108
   val_counter_val_box_ap_25          0.04358974358974359
   val_counter_val_box_ap_50          0.026923076923076925
       val_curtain_val_ap              0.2652146816253662
     val_curtain_val_ap_25             0.5314327478408813
     val_curtain_val_ap_50             0.3920953571796417
   val_curtain_val_box_ap_25          0.43966991462516997
   val_curtain_val_box_ap_50           0.3303489346022994
        val_desk_val_ap               0.06665731221437454
       val_desk_val_ap_25             0.22179965674877167
       val_desk_val_ap_50             0.12036409229040146
     val_desk_val_box_ap_25           0.20945710514536647
     val_desk_val_box_ap_50           0.09976073183915037
        val_door_val_ap                0.2943473756313324
       val_door_val_ap_25              0.4665239453315735
       val_door_val_ap_50             0.39866402745246887
     val_door_val_box_ap_25           0.37100921969731576
     val_door_val_box_ap_50            0.2826605488354612
          val_loss_ce                  4.785645008087158
         val_loss_ce_0                 5.126230716705322
         val_loss_ce_1                 5.126230716705322
         val_loss_ce_10                5.196137428283691
         val_loss_ce_11                4.6707353591918945
         val_loss_ce_2                 4.724138259887695
         val_loss_ce_3                 3.7586417198181152
         val_loss_ce_4                 4.158240795135498
         val_loss_ce_5                 3.747943878173828
         val_loss_ce_6                 4.5020575523376465
         val_loss_ce_7                 4.032673358917236
         val_loss_ce_8                 4.749695777893066
         val_loss_ce_9                 4.423295974731445
         val_loss_dice                 0.4949915409088135
        val_loss_dice_0                 1.49604332447052
        val_loss_dice_1                 1.49604332447052
        val_loss_dice_10               0.5203320384025574
        val_loss_dice_11               0.5124529004096985
        val_loss_dice_2                1.2461313009262085
        val_loss_dice_3                0.9212519526481628
        val_loss_dice_4                0.7187066078186035
        val_loss_dice_5                0.6167598962783813
        val_loss_dice_6                0.597494900226593
        val_loss_dice_7                0.5695124268531799
        val_loss_dice_8                0.5412126779556274
        val_loss_dice_9                0.5229931473731995
         val_loss_mask                0.22357477247714996
        val_loss_mask_0                0.6119896173477173
        val_loss_mask_1                0.6119896173477173
        val_loss_mask_10              0.21661007404327393
        val_loss_mask_11              0.20730149745941162
        val_loss_mask_2               0.42637062072753906
        val_loss_mask_3                0.3108738362789154
        val_loss_mask_4               0.24766111373901367
        val_loss_mask_5               0.24081513285636902
        val_loss_mask_6                0.2341257631778717
        val_loss_mask_7                0.2239333540201187
        val_loss_mask_8               0.21515056490898132
        val_loss_mask_9               0.22211673855781555
          val_mean_ap                 0.20701438188552856
         val_mean_ap_25                0.3267207741737366
         val_mean_ap_50               0.28194916248321533
       val_mean_box_ap_25             0.28025912576137446
       val_mean_box_ap_50              0.2219385085388577
        val_mean_loss_ce               4.5385894775390625
       val_mean_loss_dice              0.7887635231018066
       val_mean_loss_mask              0.3071163594722748
   val_otherfurniture_val_ap          0.02926221676170826
  val_otherfurniture_val_ap_25        0.03219696879386902
  val_otherfurniture_val_ap_50        0.03158019483089447
val_otherfurniture_val_box_ap_25      0.02678729082899887
val_otherfurniture_val_box_ap_50      0.02678729082899887
       val_picture_val_ap             0.08219031989574432
     val_picture_val_ap_25             0.1218111589550972
     val_picture_val_ap_50            0.11195366084575653
   val_picture_val_box_ap_25          0.05201220732273186
   val_picture_val_box_ap_50          0.04520882525997615
val_refridgerator_val_box_ap_25       0.07309941520467836
val_refridgerator_val_box_ap_50       0.05116959064327485
    val_refrigerator_val_ap           0.053752437233924866
   val_refrigerator_val_ap_25         0.08771929889917374
   val_refrigerator_val_ap_50         0.06622806936502457
   val_shower curtain_val_ap          0.05099206417798996
  val_shower curtain_val_ap_25         0.1785714328289032
  val_shower curtain_val_ap_50         0.1785714328289032
val_shower_curtain_val_box_ap_25      0.047619047619047616
val_shower_curtain_val_box_ap_50              0.0
        val_sink_val_ap               0.37192314863204956
       val_sink_val_ap_25              0.6237062215805054
       val_sink_val_ap_50             0.47047069668769836
     val_sink_val_box_ap_25           0.49419247865368576
     val_sink_val_box_ap_50            0.4069185102907767
        val_sofa_val_ap               0.16377057135105133
       val_sofa_val_ap_25              0.3117753267288208
       val_sofa_val_ap_50              0.2562454640865326
     val_sofa_val_box_ap_25           0.26502388722299247
     val_sofa_val_box_ap_50           0.21514334793498077
        val_table_val_ap              0.37930378317832947
      val_table_val_ap_25              0.5890344977378845
      val_table_val_ap_50              0.5068894028663635
    val_table_val_box_ap_25           0.46905199949535215
    val_table_val_box_ap_50           0.40148802190331057
       val_toilet_val_ap               0.775260865688324
      val_toilet_val_ap_25             0.881818413734436
      val_toilet_val_ap_50             0.8655080199241638
    val_toilet_val_box_ap_25           0.8459097369692475
    val_toilet_val_box_ap_50           0.7015707902567254
       val_window_val_ap              0.09093987941741943
      val_window_val_ap_25            0.16826088726520538
      val_window_val_ap_50            0.14435727894306183
    val_window_val_box_ap_25           0.1304949458691894
    val_window_val_box_ap_50          0.07329903013224959
────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────